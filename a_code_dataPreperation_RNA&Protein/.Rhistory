dataInput2=dataOutput
dataOutput2 = unnormalizeData(dataInput2)
dataOutput2
p<-list(a=1,b=2)
p
names(p)
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = list(timeIntensityData=(data.frame(hpi,GFP)))
dataInput$timeIntensityData$GFP
is.data.frame(dataInput$timeIntensityData)
data_next_check=dataInput$timeIntensityData
"hpi" %in% names(data_next_check)
"hpi" %in% names(data_next_check) & "GFP" %in% names(data_next_check)
"hpi" %in% names(data_next_check) & "GFL" %in% names(data_next_check)
is.numeric(data_next_check$hpi)
is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP)
dataCheck <-function(data){
isalist=is.list(data)
if(isalist){
doesitcontainTID=("timeIntensityData" %in% names(data))
if(doesitcontainTID){
issection_dataframe=is.data.frame(data$timeIntensityData)
if(issection_dataframe){
data_next_check=data$timeIntensityData
}
if(!issection_dataframe){
stop("the timeIntensityData section should be a data frame")
}
}
if(!doesitcontainTID){
stop("the list should contain timeIntensityData section")
}
}
if(!isalist){
isadataframe=is.data.frame(data)
if(isadataframe){
data_next_check=data
data2=data
data=list(timeIntensityData=data2)
}
if(!isadataframe){
stop("It should either be a list or a data frame")
}
}
num_columns=ncol(data_next_check)
if(num_columns==2){
doescolnamescorrect=("hpi" %in% names(data_next_check) & "GFP" %in% names(data_next_check))
if(doescolnamescorrect){
arecolumnsnumeric=(is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP))
if(arecolumnsnumeric){
print("check done")
return(data)
}
if(!arecolumnsnumeric){
stop("The columns should include numbers")
}
}
if(!doescolnamescorrect){
stop("The colum names should be hpi and GFP")
}
}
if(!num_columns==2){
stop("The data frame should contain 2 columns")
}
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = dataCheck(dataInput)
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
is.list(dataInput)
is.data.frame(dataInput)
list(data=dataInput,b=3)
p<-list(data=dataInput,b=3)
is.list(p)
is.data.frame(p)
dataCheck <-function(data){
isalist=(is.list(data) & !is.data.frame(data))
if(isalist){
doesitcontainTID=("timeIntensityData" %in% names(data))
if(doesitcontainTID){
issection_dataframe=is.data.frame(data$timeIntensityData)
if(issection_dataframe){
data_next_check=data$timeIntensityData
}
if(!issection_dataframe){
stop("the timeIntensityData section should be a data frame")
}
}
if(!doesitcontainTID){
stop("the list should contain timeIntensityData section")
}
}
if(!isalist){
isadataframe=is.data.frame(data)
if(isadataframe){
data_next_check=data
data2=data
data=list(timeIntensityData=data2)
}
if(!isadataframe){
stop("It should either be a list or a data frame")
}
}
num_columns=ncol(data_next_check)
if(num_columns==2){
doescolnamescorrect=("hpi" %in% names(data_next_check) & "GFP" %in% names(data_next_check))
if(doescolnamescorrect){
arecolumnsnumeric=(is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP))
if(arecolumnsnumeric){
print("check done")
return(data)
}
if(!arecolumnsnumeric){
stop("The columns should include numbers")
}
}
if(!doescolnamescorrect){
stop("The colum names should be hpi and GFP")
}
}
if(!num_columns==2){
stop("The data frame should contain 2 columns")
}
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = dataCheck(dataInput)
View(data_next_check)
dataOutput
unnormalizeData <-
function(dataInput)
{
hpi=dataOutput$dataScalingParameters$timeMin+
dataOutput$dataScalingParameters$timeRatio*dataOutput$timeIntensityData$hpi
GFP=dataOutput$dataScalingParameters$intensityMin+
dataOutput$dataScalingParameters$intensityRatio*dataOutput$timeIntensityData$GFP
dataOutput = list(timeIntensityData=data.frame(hpi,GFP))
return(dataOutput)
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = normalizeData(dataInput)
dataInput2=dataOutput
dataOutput2 = dataCheck(dataInput2)
dataOutput2
sd(c(3,5))
170*105/151
require("sicegar")
detach(sicegar)
detach("sicegar")
load("~/GitHub/single_cell_virology/processedData/SCV045_filter00_combinedResults.Rda")
View(all_fPc_SCV045_filter00)
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
t(all_fPc_SCV045_filter00[7,])
t(all_fPc_SCV045_filter00[12,])
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(q1)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(q1)
View(q1)
q1<-read.csv(file = "Protein_Counts_GlycerolTimeCourse.csv")
View(q1)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(q1)
View(q1)
q2<-read.csv(file="MURI_60_1b_raw_protein_count.txt")
View(q2)
q2<-read.table(file="MURI_60_1b_raw_protein_count.txt")
View(q2)
View(q1)
Sample60_t336_R3
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(q3)
setdiff(q2$gene_id,q1$gene_id)
q3%>%dplyr::filter(gene_id %in% setdiff(q2$gene_id,q1$gene_id))->oo
View(oo)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
dir()
listFiles=dir()
listFiles=dir()
grep("MURI_[85,90]",listFiles)
grep("MURI_[[85,90]]",listFiles)
grep("MURI_[85,90]",listFiles)
grep("MURI_[[85,90]].*",listFiles)
grep("MURI_[[85,90]]*.*",listFiles)
grep("MURI_[[85,90]]*.",listFiles)
grep("MURI_[[85,90]].*",listFiles)
grep("MURI_85",listFiles)
grep("MURI_[85:86]",listFiles)
grep("MURI_[85:86]",listFiles,value = TRUE)
grep("MURI_[85:86].*",listFiles,value = TRUE)
grep("MURI_[85:90].*",listFiles,value = TRUE)
grep("MURI_[85:90]_.*",listFiles,value = TRUE)
grep("MURI_[85:90]_*",listFiles,value = TRUE)
grep("MURI_[85:90]_.",listFiles,value = TRUE)
grep("MURI_[85:90]_",listFiles,value = TRUE)
grep("MURI_[85]_",listFiles,value = TRUE)
grep("MURI_85_",listFiles,value = TRUE)
grep("MURI_[[85]]_",listFiles,value = TRUE)
grep("MURI_[85]_",listFiles,value = TRUE)
grep("MURI_85:86_",listFiles,value = TRUE)
grep("MURI_85_",listFiles,value = TRUE)
grep("MURI_[85|86]_",listFiles,value = TRUE)
grep("MURI_85|86_",listFiles,value = TRUE)
grep("MURI_85|87_",listFiles,value = TRUE)
grep("MURI_85::87_",listFiles,value = TRUE)
grep("MURI_85:87_",listFiles,value = TRUE)
grep("MURI_{85:87}_",listFiles,value = TRUE)
grep("MURI_{85,87}_",listFiles,value = TRUE)
grep("MURI_{85,87\}_",listFiles,value = TRUE)
grep("MURI_85|86|87|88|89|90_",listFiles,value = TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(temp01)
View(q3)
shortList[1]
shortList[2]
shortList[3]
shortList[4]
grepl("_1a_",shortList[4])
grepl("_1b_",shortList[4])
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
nameAdd
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
grepl("_1a_",shortList[counter01])
nameAdd=paste0(nameSeq[counter01],"_0")
nameSeq=seq(85,90)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(temp01)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(temp02)
nameAdd
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(temp02)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(combinedLactate)
?rep
rep(1:4, 2)
rep(1:4, each = 2)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
View(combinedLactate)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/temporaryFileGeneration.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(data)
data<-read.table(file=paste0(locationOfProteinDataSets,"Protein_Counts_GlycerolTimeCourse.csv"),header=T,  fill = TRUE, sep = ",")
View(data)
View(data)
colnames(data)
gsub("_*.*","",colnames(data))
gsub("_.*","",colnames(data))
gsub("_.*","",colnames(data[2:ncol(data)]))
gsub("Sample","",gsub("_.*","",colnames(data[2:ncol(data)])))
sprintf("%03d",gsub("Sample","",gsub("_.*","",colnames(data[2:ncol(data)]))))
sprintf("%3d",gsub("Sample","",gsub("_.*","",colnames(data[2:ncol(data)]))))
sprintf("%.03d",gsub("Sample","",gsub("_.*","",colnames(data[2:ncol(data)]))))
sprintf("%03d",gsub("Sample","",gsub("_.*","",colnames(data[2:ncol(data)]))))
sprintf("%03d",10)
gsub("Sample","",gsub("_.*","",colnames(data[2:ncol(data)])))
as.numeric(gsub("Sample","",gsub("_.*","",colnames(data[2:ncol(data)]))))
sprintf("%03d",as.numeric(gsub("Sample","",gsub("_.*","",colnames(data[2:ncol(data)])))))
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(data)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
locationOfProteinDataSets
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(data)
data<-read.table(file=paste0(locationOfProteinDataSets,"Protein_Counts_Gluconate"),header=T,  fill = TRUE, sep = ",",skip=0)
View(data)
data<-read.table(file=paste0(locationOfProteinDataSets,"Protein_Counts_Gluconate.csv"),header=T,  fill = TRUE, sep = ",",skip=0)
View(data)
colnames(data)
?gsub
colnames(data)[2:nrow(data)]
colnames(data)[2:nrow(data)]
colnames(data)[2:ncol(data)]
gsub("Sample\.","",colnames(data)[2:ncol(data)])
gsub("Sample\\.","",colnames(data)[2:ncol(data)])
gsub("\\.stationary|\\.Exp","",gsub("Sample\\.","",colnames(data)[2:ncol(data)]))
gsub("\\.stationary|\\.EXP","",gsub("Sample\\.","",colnames(data)[2:ncol(data)]))
gsub("_R.*","",gsub("\\.stationary|\\.EXP","",gsub("Sample\\.","",colnames(data)[2:ncol(data)])))
gsub("\\.a","_0",gsub("_R.*","",gsub("\\.stationary|\\.EXP","",gsub("Sample\\.","",colnames(data)[2:ncol(data)]))))
gsub("\\.b","_1",gsub("\\.a","_0",gsub("_R.*","",gsub("\\.stationary|\\.EXP","",gsub("Sample\\.","",colnames(data)[2:ncol(data)])))))
temp01<-gsub("Sample\\.","",colnames(data)[2:ncol(data)])
temp01
temp01<-gsub("Sample\\.","",colnames(data)[2:ncol(data)])
temp01<-gsub("\\.stationary|\\.EXP","",temp01)
temp01
temp01%>%
gsub("Sample\\.","",colnames(data)[2:ncol(data)])%>%
gsub("\\.stationary|\\.EXP","",.)->temp02
temp01<-gsub("Sample\\.","",colnames(data)[2:ncol(data)])
temp01<-gsub("\\.stationary|\\.EXP","",temp01)
temp01
temp01<-gsub("_R.*","",temp01)
temp01
temp01<-gsub("Sample\\.","",colnames(data)[2:ncol(data)])
temp01<-gsub("\\.stationary|\\.EXP","",temp01)
temp01<-gsub("_R.*","",temp01)
temp01<-gsub("\\.a","_0",temp01)
temp01<-gsub("\\.b","_1",temp01)
temp01
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(temp)
View(data)
data %>% dplyr::select("gene_id",counter01) -> temp
data %>% dplyr::select(1,counter01) -> temp
View(temp)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
temp01
temp01
gsub("\\.*","",temp01)
gsub("\\*.","",temp01)
gsub("\\.*.*","",temp01)
gsub("\\..*","",temp01)
as.numeric(gsub("\\..*","",temp01))
sprintf("%03d",as.numeric(gsub("\\..*","",temp01)))
temp01
gsub("*\.","",temp01)
gsub("*\\.","",temp01)
gsub("*.\\.","",temp01)
gsub("*.*\\.","",temp01)
View(data)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
temp01
sprintf("%03d",as.numeric(gsub("\\..*","",temp01)))
gsub("*.*\\.","",temp01)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
temp01
temp01<-gsub("\\.a","_0",temp01)
temp01<-gsub("\\.b","_1",temp01)
nameList=c("gene_id",temp01)
nameList
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
data<-read.table(file=paste0(locationOfProteinDataSets,"Protein_Counts_Lactate.csv"),
header=T,  fill = TRUE, sep = ",",skip=0)
View(data)
colnames(data)
temp01<-gsub("Sample","",colnames(data)[2:ncol(data)])
temp01
gsub("_.*","",temp01)
gsub("*._","",temp01)
gsub("._","",temp01)
gsub("*_","",temp01)
gsub("*.*_","",temp01)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
temp01
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(proteinMatrix_wo_NA)
View(proteinMatrix)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
n
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
is.na(proteinMatrix)
colSums(is.na(proteinMatrix))
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
3544+930
3702+1419
RawProtein_FileList
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(temp)
View(temp)
proteinMatrix[,61]
View(proteinMatrix)
is.na(proteinMatrix[,61])
sum(is.na(proteinMatrix[,61]))
sum(!is.na(proteinMatrix[,61]))
counter01
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(proteinMatrix)
c(nrow(temp)
)
sum(!is.na(proteinMatrix[,counter01])))
sum(!is.na(proteinMatrix[,counter01]))
sum(!is.na(proteinMatrix[,counter01]))
counter01
counter01+1
sum(!is.na(proteinMatrix[,counter01+1]))
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
print(c(nrow(temp),sum(!is.na(proteinMatrix[,counter01+1]))))
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(proteinMatrix)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(data)
q<-is.na(data)
q<-sum(is.na(data))
q<-is.na(data)+0
View(q)
q<-!is.na(data)+0
View(q)
q<-(!is.na(data))+0
View(q)
rowseum((!is.na(data))+0)
rowsum((!is.na(data))+0)
rowSums((!is.na(data))+0)
which(rowSums((!is.na(data))+0)==0)
which(rowSums((!is.na(data))+0)==1)
which(rowSums((!is.na(data))+0)==0)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(data)
View(data)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(data)
rowSums((!is.na(data))+0)
owSums((!is.na(data))+0)
rowSums((!is.na(data))+0)
View(data)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(proteinMatrix)
View(proteinMatrix_wo_NA)
View(data)
View(proteinMatrix)
View(proteinMatrix_wo_NA)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Meta_data.R', echo=TRUE)
View(meta_protein_addition)
View(meta_protein)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Protein_RawCount.R', echo=TRUE)
View(proteinMatrix)
source('~/GitHub/ecoli_multiple_growth_conditions/a_code_dataPreperation_RNA&Protein/generating_Meta_data.R', echo=TRUE)
View(meta_protein)
View(meta_protein)
meta_protein_addition%>%dplyr::filter(experiment=="glucose_time_course")%>%dplyr::summarise(length(experiment)
->q
""
meta_protein_addition%>%
dplyr::filter(experiment=="glucose_time_course")%>%
dplyr::summarise(length(experiment)->q
meta_protein%>%
dplyr::filter(experiment=="glucose_time_course")
colnames(meta_protein)
meta_protein%>%
dplyr::filter(experiment=="glucose_time_course")
meta_protein%>%
dplyr::filter(experiment=="glucose_time_course")%>%
dplyr::summarise(length(experiment)->q
meta_protein%>%
dplyr::filter(experiment=="glucose_time_course")%>%
dplyr::summarise(length(experiment)
meta_protein%>%
dplyr::filter(experiment=="glucose_time_course")%>%
dplyr::summarise(length(experiment))->q
meta_protein%>%
dplyr::filter(experiment=="glucose_time_course")
meta_protein%>%
dplyr::group_by(experiment)%>%
dplyr::filter(experiment=="glucose_time_course")%>%
dplyr::summarise(length(experiment))->q
View(q)
