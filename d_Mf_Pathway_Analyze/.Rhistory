if(doescolnamescorrect){
arecolumnsnumeric=(is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP))
if(arecolumnsnumeric){
print("check done")
return(data)
}
if(!arecolumnsnumeric){
stop("The columns should include numbers")
}
}
if(!doescolnamescorrect){
stop("The colum names should be hpi and GFP")
}
}
if(!num_columns==2){
stop("The data frame should contain 2 columns")
}
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = dataCheck(dataInput)
View(data_next_check)
dataOutput
unnormalizeData <-
function(dataInput)
{
hpi=dataOutput$dataScalingParameters$timeMin+
dataOutput$dataScalingParameters$timeRatio*dataOutput$timeIntensityData$hpi
GFP=dataOutput$dataScalingParameters$intensityMin+
dataOutput$dataScalingParameters$intensityRatio*dataOutput$timeIntensityData$GFP
dataOutput = list(timeIntensityData=data.frame(hpi,GFP))
return(dataOutput)
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = normalizeData(dataInput)
dataInput2=dataOutput
dataOutput2 = dataCheck(dataInput2)
dataOutput2
sd(c(3,5))
170*105/151
require("sicegar")
detach(sicegar)
detach("sicegar")
load("~/GitHub/single_cell_virology/processedData/SCV045_filter00_combinedResults.Rda")
View(all_fPc_SCV045_filter00)
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
t(all_fPc_SCV045_filter00[7,])
t(all_fPc_SCV045_filter00[12,])
rep(1:4, 2)
rep("a", 2)
rep(c("a","b"), 2)
rep(c("a","b"), 2,4)
rep(c("a","b"), c(2,4))
rep(c("a","b","c"), c(2,4,6))
FDR?
?
`
""
ELKFWE
QUIR
S
msdnbf
)))
install.packages("ada", "caret", "e1071", "ggplot2", "GGally", "glmnet", "MASS", "randomForest", "reshape2", "sparsediscrim")
install.packages("ada")
install.packages("caret")
install.packages("e1071")
install.packages("ggplot2")
install.packages("GGally")
install.packages("glmnet")
install.packages("MASS")
install.packages("randomForest")
install.packages("reshape2")
install.packages("sparsediscrim")
source("https://bioconductor.org/biocLite.R")
biocLite("genefilter")
??foreach
install.packages("doMC")
install.packages("foreach")
??foreach
require(doMC)
require(foreach)
??foreach
?foreach
source('~/Desktop/statTest.R', echo=TRUE)
mean(trueSet)
mean(wrongSet)
length(trueSet)
length(wrongSet)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
sprintf("%E", pi)
sprintf("%3E", pi)
sprintf("%.3E", pi)
sprintf("%.3E", 9837649872345095486)
sprintf("%.3e", 9837649872345095486)
sprintf("%.3e", .000000009837649872345095486)
sprintf("%.3E", .000000009837649872345095486)
# Initial Command to Reset the System
rm(list = ls())
if (is.integer(dev.list())){dev.off()}
cat("\014")
load("/Users/umut/GitHub/single_cell_virology/processedData/SCV047_mod05filter00_Max1000Min40.Rda")
View(fP_SCV047_mod05filter00_Max1000Min40)
require("RDAVIDWebService")
install.packages("rJava")
require("RDAVIDWebService")
require("rJava")
require("RDAVIDWebService")
require("RDAVIDWebService")
expand.grid(c(1,2),c(3,4))
expand.grid(c(1,2),c(3,4))
as.data.frame(letters=c("a","a","b","b","b","b"),=numbers=c(1,2,1,2,3,4))
data.frame(letters=c("a","a","b","b","b","b"),=numbers=c(1,2,1,2,3,4))
data.frame(letters=c("a","a","b","b","b","b"),numbers=c(1,2,1,2,3,4))
q<-data.frame(letters=c("a","a","b","b","b","b"),numbers=c(1,2,1,2,3,4))
q
q %>% dplyr::group_by(letters) %>% dplyr::mutate(numbers2=numbers)
q %>% dplyr::group_by(letters) %>% dplyr::mutate(numbers2=numbers)->q
require("dplyr")
q %>% dplyr::group_by(letters) %>% dplyr::mutate(numbers2=numbers)->q
q
q %>% dplyr::summerize(numcomb=expand.grid(numbers,numbers2))
q %>% dplyr::summarise(numcomb=expand.grid(numbers,numbers2))
q %>% dplyr::do(numcomb=expand.grid(numbers,numbers2))
q %>% dplyr::mutate(numcomb=expand.grid(numbers,numbers2))
q %>% dplyr::do(numcomb=expand.grid(numbers,numbers2))
q
q %>% dplyr::do(numcomb=expand.grid(q$numbers,q$numbers2))
q %>% dplyr::group_by(letters)%>%dplyr::do(numcomb=expand.grid(q$numbers,q$numbers2))
q %>% dplyr::group_by(letters)%>%dplyr::do(numcomb=expand.grid(q$numbers,q$numbers2))->q2
q2[1]
q2$numcomb
q2$numcomb[1]
q2$numcomb
numcomb=expand.grid(q$numbers,q$numbers2)
expendFunction<-function(numcomb=expand.grid(a,b);return(numcomb))
expendFunction<-function(numcomb=expand.grid(a,b)
return(numcomb))
source('~/.active-rstudio-document', echo=TRUE)
View(q3)
q3[1]
q3$numcomb
q3$numcomb[1]
as.data.frame(q3)
as.data.frame(q3)->q4
View(q4)
q3%>%do(as.data.frame(.[["numcomb"]]))->q4
View(q4)
q2 %>%
dplyr::group_by(letters)%>%
dplyr::do(numcomb=as.data.frame(expendFunction(a=.[["numbers"]],b=.[["numbers2"]])))->q3
View(q3)
q2 %>%
dplyr::group_by(letters)%>%
dplyr::do(numcomb=data.frame(expendFunction(a=.[["numbers"]],b=.[["numbers2"]])))->q3
q2 %>%
dplyr::group_by(letters)%>%
dplyr::do(numcomb=expendFunction(a=.[["numbers"]],b=.[["numbers2"]]))->q3
q3%>%do(as.data.frame(.[["numcomb"]]))->q4
q3%>%do(as.data.frame(.["letters"],.[["numcomb"]]))->q4
View(q3)
source('~/.active-rstudio-document', echo=TRUE)
View(q3)
source('~/.active-rstudio-document', echo=TRUE)
View(q3)
q3$numcomb[1]
q3$numcomb[1]->m
as.data.frame(q3$numcomb[1])->m
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(numcomb)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
numcomb
numcomb[1]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(q3)
source('~/.active-rstudio-document', echo=TRUE)
View(q3)
source('~/.active-rstudio-document', echo=TRUE)
View(q3)
source('~/.active-rstudio-document', echo=TRUE)
q3 %>% dplyr::do(do.call(data.frame, c(list(numcomb=.$numcomb,
Mutation=.$Mutation,
Cell=.$Cell,
dataSet=.$dataSet))))
View(q3)
q3 %>% dplyr::do(do.call(data.frame, .$numcomb)
)
q3 %>% dplyr::do(do.call(data.frame, .$numcomb))
q3 %>% dplyr::do(do.call(data.frame, .$numcomb,.$letters))
q3 %>% dplyr::do(do.call(data.frame, list(.$letters,.$numcomb))
)
q3 %>% dplyr::do(do.call(dplyr::left_join, list(.$letters,.$numcomb)))
q3 %>% dplyr::do(do.call(dplyr::left_join, list(data.frame(.$letters),data.frame(.$numcomb))))
q3 %>% dplyr::do(do.call(dplyr::rbind_list(), list(data.frame(.$letters),data.frame(.$numcomb))))
q3 %>% dplyr::do(do.call(dplyr::rbind_list(), list((.$letters),(.$numcomb))))
q3 %>% dplyr::do(do.call(dplyr::rbind_list(), list(.$letters,.$numcomb)))
q3 %>% dplyr::do(do.call(data.frame, .$numcomb))
q3 %>% dplyr::do(do.call(data.frame, c(.$letters,.$numcomb)))
q3$letters
q3 %>% dplyr::do(do.call(data.frame, c(list(.$letters),.$numcomb)))
q3 %>% dplyr::do(do.call(data.frame, .$letters,.$numcomb)))
q3 %>% dplyr::do(do.call(data.frame, .$letters,.$numcomb))
q3 %>% dplyr::do(do.call(data.frame, list(.$letters,.$numcomb)))
q3 %>% dplyr::do(do.call(data.frame, list(as.vector(.$letters),.$numcomb)))
q3 %>% dplyr::do(do.call(data.frame, list(letters=as.vector(.$letters),numbers.$numcomb)))
q3 %>% dplyr::do(do.call(data.frame, list(letters=as.vector(.$letters),numbers=.$numcomb)))
install.packages('ReporteRs') # Install
warnings()
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_kegg.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/generateDictionary/ENTREZ_GENE_IDs.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/generateDictionary/ENTREZ_GENE_IDs.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
View(kegg_input)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
View(kegg_result)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
kegg_result
kegg_result ->kegg_result_short
pathway_list=as.vector(kegg_result_short$Term)
pathway_list
inputGenes=unique(as.vector(kegg_input_df$gene_name))
inputGenes
kegg_input_df %>%
dplyr::select(ID=gene_name, padj_gene=padj, log2=log2FoldChange, signChange)%>%
dplyr::mutate(score_gene=-signChange*log10(padj_gene))->kegg_input_df_narrow
kegg_result_short %>%
dplyr::select(KEGG_Path=Term, FDR_KEGG_Path=FDR)%>%
dplyr::mutate(FDR_KEGG_Path=FDR_KEGG_Path/100)->kegg_result_narrow
kegg_input_df_narrow
head(kegg_input_df_narrow)
kegg_result_short %>%
dplyr::select(KEGG_Path=Term, FDR_KEGG_Path=FDR)%>%
dplyr::mutate(FDR_KEGG_Path=FDR_KEGG_Path/100)->kegg_result_narrow
kegg_result_narrow
objectName_df$datatType
objectName_df
objectName_df$pick_data
officialGeneSymbol_entrezGeneId<-read.csv(file="../generateDictionary/rna_tidy_eColi_ez.csv")
View(officialGeneSymbol_entrezGeneId)
head(officialGeneSymbol_entrezGeneId)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
kegg_result %>%
dplyr::rename(KEGG_Path=Term, FDR_KEGG_Path=FDR)%>%
dplyr::mutate(FDR_KEGG_Path=FDR_KEGG_Path/100)->kegg_result_narrow
View(kegg_result_narrow)
colnames(kegg_result_narrow )
kegg_result_narrow$KEGG_Path
gsub("*.*:","",kegg_result_narrow$KEGG_Path)
kegg_result %>%
dplyr::rename(KEGG_Path=Term, FDR_KEGG_Path=FDR)%>%
dplyr::mutate(FDR_KEGG_Path=FDR_KEGG_Path/100)%>%
dplyr::mutate(KEGG_Path_Short=gsub("*.*:","",KEGG_Path))->kegg_result_narrow
View(kegg_result_narrow)
?seperate
?separate
require("tidyr")
kegg_input_df %>%
dplyr::select(ID=gene_name, padj_gene=padj, log2=log2FoldChange, signChange)%>%
dplyr::mutate(score_gene=-signChange*log10(padj_gene)) %>%
tidyr::separate(col = Genes, sep = ",")->kegg_input_df_narrow
kegg_input_df$Genes
kegg_input_df$genes
head(kegg_input_df_narrow)
install.packages("stringer")
install.packages("stringr")
install.packages("stringr")
require("stringr")
a <- str_count(kegg_result$Genes, ",")
a
max(str_count(kegg_result$Genes, ","))
max(str_count(kegg_result$Genes, ","))+1
paste("gene_",max(str_count(kegg_result$Genes, ","))+1)
paste("gene_",1:max(str_count(kegg_result$Genes, ","))+1)
paste0("gene_",1:max(str_count(kegg_result$Genes, ","))+1)
kegg_result %>%
dplyr::rename(KEGG_Path=Term, FDR_KEGG_Path=FDR)%>%
dplyr::mutate(FDR_KEGG_Path=FDR_KEGG_Path/100)%>%
dplyr::mutate(KEGG_Path_Short=gsub("*.*:","",KEGG_Path))%>%
tidyr::separate(col = Genes, into = additionalColumnNames, sep = ",")->kegg_result_narrow
additionalColumnNames<-paste0("gene_",1:max(str_count(kegg_result$Genes, ","))+1)
kegg_result %>%
dplyr::rename(KEGG_Path=Term, FDR_KEGG_Path=FDR)%>%
dplyr::mutate(FDR_KEGG_Path=FDR_KEGG_Path/100)%>%
dplyr::mutate(KEGG_Path_Short=gsub("*.*:","",KEGG_Path))%>%
tidyr::separate(col = Genes, into = additionalColumnNames, sep = ",")->kegg_result_narrow
View(kegg_result_narrow)
additionalColumnNames
additionalColumnNames<-paste0("gene_",1:(max(str_count(kegg_result$Genes, ","))+1))
additionalColumnNames
sprintf("filter%02d", 1:(max(str_count(kegg_result$Genes, ","))+1))
sprintf("gene_%02d", 1:(max(str_count(kegg_result$Genes, ","))+1))
additionalColumnNames<-sprintf("gene_%02d", 1:(max(str_count(kegg_result$Genes, ","))+1))
# Put the KEGG output into a more useful format
kegg_result %>%
dplyr::rename(KEGG_Path=Term, FDR_KEGG_Path=FDR)%>%
dplyr::mutate(FDR_KEGG_Path=FDR_KEGG_Path/100)%>%
dplyr::mutate(KEGG_Path_Short=gsub("*.*:","",KEGG_Path))%>%
tidyr::separate(col = Genes, into = additionalColumnNames, sep = ",")->kegg_result_narrow
View(kegg_result_narrow)
additionalColumnNames<-sprintf("gene_%02d", 1:(max(str_count(kegg_result$Genes, ","))+1))
# Put the KEGG output into a more useful format
kegg_result %>%
dplyr::rename(KEGG_Path=Term, FDR_KEGG_Path=FDR)%>%
dplyr::mutate(FDR_KEGG_Path=FDR_KEGG_Path/100)%>%
dplyr::mutate(KEGG_Path_Short=gsub("*.*:","",KEGG_Path))%>%
tidyr::separate(col = Genes, into = additionalColumnNames, sep = ",")->kegg_result_divided
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, ... = additionalColumnNames)->kegg_result_tidy
additionalColumnNames
kegg_result_divided %>%
tidyr::gather_(key = gene_number, value = gene_name, ... = additionalColumnNames)->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather_(key = "gene_number", value = "gene_name", ... = additionalColumnNames)->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather_(key = "gene_number", value = "gene_name", ... = gene_01:gene_19)->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, ... = gene_01:gene_19)->kegg_result_tidy
View(kegg_result_tidy)
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, ... = additionalColumnNames[[1]]:gene_19)->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, ... = additionalColumnNames[1]:gene_19)->kegg_result_tidy
additionalColumnNames[1]
kegg_result_divided %>%
tidyr::gather_(key = "gene_number", value = "gene_name", ... = additionalColumnNames)->kegg_result_tidy
?select
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, ... = contains(additionalColumnNames))->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, ... = starts_with("gene_"))->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, starts_with("gene_"))->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, dplyr::starts_with("gene_"))->kegg_result_tidy
View(kegg_result_tidy)
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, dplyr::contains(additionalColumnNames))->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name, dplyr::starts_with("gene_"))->kegg_result_tidy
View(kegg_result_tidy)
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name_ez, dplyr::starts_with("gene_"), na.rm = TRUE)->kegg_result_tidy
View(kegg_result_tidy)
View(officialGeneSymbol_entrezGeneId)
View(officialGeneSymbol_entrezGeneId)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=to, gene_name=from)
colnames(officialGeneSymbol_entrezGeneId)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::left_join(kegg_result_tidy,.)->kegg_result_tidy
officialGeneSymbol_entrezGeneId$To
officialGeneSymbol_entrezGeneId$To=as.character(officialGeneSymbol_entrezGeneId$To)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::left_join(kegg_result_tidy,.)->kegg_result_tidy
View(kegg_result_tidy)
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name_ez,
dplyr::starts_with("gene_"), na.rm = TRUE)->kegg_result_tidy
kegg_result_divided %>%
tidyr::gather(key = gene_number, value = gene_name_ez,
dplyr::starts_with("gene_"), na.rm = TRUE)->kegg_result_tidy
View(kegg_result_tidy)
officialGeneSymbol_entrezGeneId$To=as.character(officialGeneSymbol_entrezGeneId$To)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::left_join(kegg_result_tidy,.)->kegg_result_tidy2
View(kegg_result_tidy2)
View(officialGeneSymbol_entrezGeneId)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::inner_join(kegg_result_tidy,.)->kegg_result_tidy2
officialGeneSymbol_entrezGeneId$To=as.character(officialGeneSymbol_entrezGeneId$To)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::outer_join(kegg_result_tidy,.)->kegg_result_tidy2
officialGeneSymbol_entrezGeneId$To=as.character(officialGeneSymbol_entrezGeneId$To)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::left_join(kegg_result_tidy,.)->kegg_result_tidy2
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)
head(officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From))
head(officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From))->q
q%>% arrange(gene_name_ez)
q%>% dplyr::arrange(gene_name_ez)
officialGeneSymbol_entrezGeneId$To=as.character(officialGeneSymbol_entrezGeneId$To)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::semi_join(kegg_result_tidy,.)->kegg_result_tidy2
officialGeneSymbol_entrezGeneId$To=as.character(officialGeneSymbol_entrezGeneId$To)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::left_join(kegg_result_tidy,.)->kegg_result_tidy2
View(kegg_result_tidy2)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::left_join(kegg_result_tidy,.,copy=TRUE)->kegg_result_tidy2
View(kegg_result_tidy2)
kegg_result_tidy$gene_name_ez
kegg_result
kegg_result_tidy$gene_name_ez=gsub(" ", "", kegg_result_tidy$gene_name_ez)
officialGeneSymbol_entrezGeneId$To=as.character(officialGeneSymbol_entrezGeneId$To)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::left_join(kegg_result_tidy,.)->kegg_result_tidy2
View(kegg_result_tidy2)
kegg_input_df %>%
dplyr::select(ID=gene_name, padj_gene=padj, log2=log2FoldChange, signChange)%>%
dplyr::mutate(score_gene=-signChange*log10(padj_gene))->kegg_input_df_narrow
kegg_input_df_narrow
head(kegg_input_df_narrow)
dplyr::left_join(kegg_result_tidy,kegg_input_df_narrow)->kegg_result_tidy2
kegg_input_df %>%
dplyr::select(gene_name, padj_gene=padj, log2=log2FoldChange, signChange)%>%
dplyr::mutate(score_gene=-signChange*log10(padj_gene))->kegg_input_df_narrow
# includes info abut how much each gene altered in terms of p.adj and log2 change
dplyr::left_join(kegg_result_tidy,kegg_input_df_narrow)->kegg_result_tidy2
head(kegg_input_df_narrow)
head(kegg_result_tidy)
officialGeneSymbol_entrezGeneId %>%
dplyr::select(gene_name_ez=To, gene_name=From)%>%
dplyr::left_join(kegg_result_tidy,.)->kegg_result_tidy
head(kegg_result_tidy)
dplyr::left_join(kegg_result_tidy,kegg_input_df_narrow)->kegg_result_tidy2
View(kegg_result_tidy2)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
View(kegg_result_tidy)
colnmaes(kegg_result_tidy)
colnames(kegg_result_tidy)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
View(kegg_result_tidy_organized)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
colnames(kegg_result_tidy)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
debugSource('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
kegg_result_tidy%>%
dplyr::filter(padj_gene<0.05,FDR_KEGG_Path<0.05, abs(log2)>1) %>%
dplyr::mutate(abs_score=abs(score_gene))%>%
dplyr::group_by(KEGG_Path,signChange)
kegg_result_tidy%>%
dplyr::filter(padj_gene<0.05,FDR_KEGG_Path<0.05, abs(log2)>1) %>%
dplyr::mutate(abs_score=abs(score_gene))%>%
dplyr::group_by(KEGG_Path,signChange)%>%
dplyr::arrange(abs_score)%>%
dplyr::mutate(rank=signChange*seq(1,n()))%>%
dplyr::group_by(KEGG_Path)
colnames(kegg_result_tidy_organized)
debugSource('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
colnames(kegg_result_tidy_organized)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
kegg_result_tidy_organized_simp
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
print(fig03)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_keggV2.R', echo=TRUE)
