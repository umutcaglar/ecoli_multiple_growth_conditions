intensityRatio=intensityRatio)))
}
# add usage examples here
# generateRandomData
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = normalizeData(dataInput)
dataOutput
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
# add usage examples here
# generateRandomData
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = normalizeData(dataInput)
dataOutput
unnormalizeData <-
function(dataInput)
{
hpi=dataOutput[[2]][1]+dataOutput[[2]][2]*dataOutput[[1]]$hpi
GFP=dataOutput[[2]][3]+dataOutput[[2]][4]*dataOutput[[1]]$GFP
dataOutput = list(timeIntensityData=data.frame(hpi,GFP))
return(dataOutput)
}
# add usage examples here
# generateRandomData
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = normalizeData(dataInput)
dataInput2=dataOutput
dataOutput2 = unnormalizeData(dataInput2)
dataOutput2
p<-list(a=1,b=2)
p
names(p)
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = list(timeIntensityData=(data.frame(hpi,GFP)))
dataInput$timeIntensityData$GFP
is.data.frame(dataInput$timeIntensityData)
data_next_check=dataInput$timeIntensityData
"hpi" %in% names(data_next_check)
"hpi" %in% names(data_next_check) & "GFP" %in% names(data_next_check)
"hpi" %in% names(data_next_check) & "GFL" %in% names(data_next_check)
is.numeric(data_next_check$hpi)
is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP)
dataCheck <-function(data){
isalist=is.list(data)
if(isalist){
doesitcontainTID=("timeIntensityData" %in% names(data))
if(doesitcontainTID){
issection_dataframe=is.data.frame(data$timeIntensityData)
if(issection_dataframe){
data_next_check=data$timeIntensityData
}
if(!issection_dataframe){
stop("the timeIntensityData section should be a data frame")
}
}
if(!doesitcontainTID){
stop("the list should contain timeIntensityData section")
}
}
if(!isalist){
isadataframe=is.data.frame(data)
if(isadataframe){
data_next_check=data
data2=data
data=list(timeIntensityData=data2)
}
if(!isadataframe){
stop("It should either be a list or a data frame")
}
}
num_columns=ncol(data_next_check)
if(num_columns==2){
doescolnamescorrect=("hpi" %in% names(data_next_check) & "GFP" %in% names(data_next_check))
if(doescolnamescorrect){
arecolumnsnumeric=(is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP))
if(arecolumnsnumeric){
print("check done")
return(data)
}
if(!arecolumnsnumeric){
stop("The columns should include numbers")
}
}
if(!doescolnamescorrect){
stop("The colum names should be hpi and GFP")
}
}
if(!num_columns==2){
stop("The data frame should contain 2 columns")
}
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = dataCheck(dataInput)
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
is.list(dataInput)
is.data.frame(dataInput)
list(data=dataInput,b=3)
p<-list(data=dataInput,b=3)
is.list(p)
is.data.frame(p)
dataCheck <-function(data){
isalist=(is.list(data) & !is.data.frame(data))
if(isalist){
doesitcontainTID=("timeIntensityData" %in% names(data))
if(doesitcontainTID){
issection_dataframe=is.data.frame(data$timeIntensityData)
if(issection_dataframe){
data_next_check=data$timeIntensityData
}
if(!issection_dataframe){
stop("the timeIntensityData section should be a data frame")
}
}
if(!doesitcontainTID){
stop("the list should contain timeIntensityData section")
}
}
if(!isalist){
isadataframe=is.data.frame(data)
if(isadataframe){
data_next_check=data
data2=data
data=list(timeIntensityData=data2)
}
if(!isadataframe){
stop("It should either be a list or a data frame")
}
}
num_columns=ncol(data_next_check)
if(num_columns==2){
doescolnamescorrect=("hpi" %in% names(data_next_check) & "GFP" %in% names(data_next_check))
if(doescolnamescorrect){
arecolumnsnumeric=(is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP))
if(arecolumnsnumeric){
print("check done")
return(data)
}
if(!arecolumnsnumeric){
stop("The columns should include numbers")
}
}
if(!doescolnamescorrect){
stop("The colum names should be hpi and GFP")
}
}
if(!num_columns==2){
stop("The data frame should contain 2 columns")
}
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = dataCheck(dataInput)
View(data_next_check)
dataOutput
unnormalizeData <-
function(dataInput)
{
hpi=dataOutput$dataScalingParameters$timeMin+
dataOutput$dataScalingParameters$timeRatio*dataOutput$timeIntensityData$hpi
GFP=dataOutput$dataScalingParameters$intensityMin+
dataOutput$dataScalingParameters$intensityRatio*dataOutput$timeIntensityData$GFP
dataOutput = list(timeIntensityData=data.frame(hpi,GFP))
return(dataOutput)
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = normalizeData(dataInput)
dataInput2=dataOutput
dataOutput2 = dataCheck(dataInput2)
dataOutput2
sd(c(3,5))
170*105/151
require("sicegar")
detach(sicegar)
detach("sicegar")
load("~/GitHub/single_cell_virology/processedData/SCV045_filter00_combinedResults.Rda")
View(all_fPc_SCV045_filter00)
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
t(all_fPc_SCV045_filter00[7,])
t(all_fPc_SCV045_filter00[12,])
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_kegg_multiple.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_kegg_multiple_narrow.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/DESeq_David_kegg_multiple_narrow.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
figBarGraph_poster=ggplot(df_summary, aes(x=investigated_conditions,
y=P0.05Fold2,
fill=as.factor(signChange))) +
facet_grid(growthPhase ~ data_type_abv)+
scale_y_continuous(expand = c(0, 0),limits = c(0,1600))+
geom_bar(position="dodge",stat="identity",width=.75)+
scale_fill_manual(values = c("blue","red"),
name="Regulation",
breaks=c("-1", "1"),
labels=c("Down Regulated", "Up Regulated"))+
theme_bw()+
xlab("Test Condition") +
ylab("Number of differentially expressed genes") +
theme(panel.margin.y = unit(2, "lines"),
panel.grid.minor.x = element_blank(),
legend.position=c(0.88,0.9),
strip.text.x = element_text(size = 16),
strip.text.y = element_text(size = 16),
axis.text.x=element_text(size=10),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.background = element_rect(fill=alpha(colour = "white",
alpha = .4)))
print(figBarGraph_poster)
figBarGraph_poster=ggplot(df_summary, aes(x=investigated_conditions,
y=P0.05Fold2,
fill=as.factor(signChange))) +
facet_grid(growthPhase ~ data_type_abv)+
scale_y_continuous(expand = c(0, 0),limits = c(0,1600))+
geom_bar(position="dodge",stat="identity",width=.75)+
scale_fill_manual(values = c("blue","red"),
name="Regulation",
breaks=c("-1", "1"),
labels=c("Down Regulated", "Up Regulated"))+
theme_bw()+
xlab("Test Condition") +
ylab("Number of differentially expressed genes") +
theme(panel.margin.y = unit(2, "lines"),
panel.grid.minor.x = element_blank(),
legend.position=c(0.88,0.9),
strip.text.x = element_text(size = 16),
strip.text.y = element_text(size = 16),
axis.text.x=element_text(size=10),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.background = element_rect(fill=alpha(colour = "white",
alpha = .4)))
print(figBarGraph_poster)
figBarGraph_poster=ggplot(df_summary, aes(x=investigated_conditions,
y=P0.05Fold2,
fill=as.factor(signChange))) +
facet_grid(growthPhase + data_type_abv ~ .)+
scale_y_continuous(expand = c(0, 0),limits = c(0,1600))+
geom_bar(position="dodge",stat="identity",width=.75)+
scale_fill_manual(values = c("blue","red"),
name="Regulation",
breaks=c("-1", "1"),
labels=c("Down Regulated", "Up Regulated"))+
theme_bw()+
xlab("Test Condition") +
ylab("Number of differentially expressed genes") +
theme(panel.margin.y = unit(2, "lines"),
panel.grid.minor.x = element_blank(),
legend.position=c(0.88,0.9),
strip.text.x = element_text(size = 16),
strip.text.y = element_text(size = 16),
axis.text.x=element_text(size=10),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.background = element_rect(fill=alpha(colour = "white",
alpha = .4)))
print(figBarGraph_poster)
figBarGraph_poster=ggplot(df_summary, aes(x=investigated_conditions,
y=P0.05Fold2,
fill=as.factor(signChange))) +
facet_grid(. ~ growthPhase + data_type_abv)+
scale_y_continuous(expand = c(0, 0),limits = c(0,1600))+
geom_bar(position="dodge",stat="identity",width=.75)+
scale_fill_manual(values = c("blue","red"),
name="Regulation",
breaks=c("-1", "1"),
labels=c("Down Regulated", "Up Regulated"))+
theme_bw()+
xlab("Test Condition") +
ylab("Number of differentially expressed genes") +
theme(panel.margin.y = unit(2, "lines"),
panel.grid.minor.x = element_blank(),
legend.position=c(0.88,0.9),
strip.text.x = element_text(size = 16),
strip.text.y = element_text(size = 16),
axis.text.x=element_text(size=10),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.background = element_rect(fill=alpha(colour = "white",
alpha = .4)))
print(figBarGraph_poster)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
figBarGraph_poster=ggplot(df_summary, aes(x=investigated_conditions,
y=P0.05Fold2,
fill=as.factor(signChange))) +
facet_grid(. ~ growthPhase + data_type_abv)+
scale_y_continuous(expand = c(0, 0),limits = c(0,1600))+
geom_bar(position="dodge",stat="identity",width=.75)+
scale_fill_manual(values = c("blue","red"),
name="Regulation",
breaks=c("-1", "1"),
labels=c("Down Regulated", "Up Regulated"))+
theme_bw()+
xlab("Test Condition") +
ylab("Number of differentially expressed genes") +
theme(panel.margin.y = unit(2, "lines"),
panel.grid.minor.x = element_blank(),
legend.position=c(0.88,0.9),
strip.text.x = element_text(size = 16),
strip.text.y = element_text(size = 16),
axis.text.x=element_text(size=10, angle = 90, hjust = 1),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.background = element_rect(fill=alpha(colour = "white",
alpha = .4)))
print(figBarGraph_poster)
figBarGraph_poster=ggplot(df_summary, aes(x=investigated_conditions,
y=P0.05Fold2,
fill=as.factor(signChange))) +
facet_grid(. ~ growthPhase + data_type_abv)+
scale_y_continuous(expand = c(0, 0),limits = c(0,1600))+
geom_bar(position="dodge",stat="identity",width=.75)+
scale_fill_manual(values = c("blue","red"),
name="Regulation",
breaks=c("-1", "1"),
labels=c("Down Regulated", "Up Regulated"))+
theme_bw()+
xlab("Test Condition") +
ylab("Number of differentially expressed genes") +
theme(panel.margin.y = unit(2, "lines"),
panel.grid.x = element_blank(),
legend.position=c(0.88,0.9),
strip.text.x = element_text(size = 16),
strip.text.y = element_text(size = 16),
axis.text.x=element_text(size=10, angle = 90, hjust = 1),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.background = element_rect(fill=alpha(colour = "white",
alpha = .4)))
print(figBarGraph_poster)
figBarGraph_poster=ggplot(df_summary, aes(x=investigated_conditions,
y=P0.05Fold2,
fill=as.factor(signChange))) +
facet_grid(. ~ growthPhase + data_type_abv)+
scale_y_continuous(expand = c(0, 0),limits = c(0,1600))+
geom_bar(position="dodge",stat="identity",width=.75)+
scale_fill_manual(values = c("blue","red"),
name="Regulation",
breaks=c("-1", "1"),
labels=c("Down Regulated", "Up Regulated"))+
theme_bw()+
xlab("Test Condition") +
ylab("Number of differentially expressed genes") +
theme(panel.margin.y = unit(2, "lines"),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position=c(0.88,0.9),
strip.text.x = element_text(size = 16),
strip.text.y = element_text(size = 16),
axis.text.x=element_text(size=10, angle = 90, hjust = 1),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.background = element_rect(fill=alpha(colour = "white",
alpha = .4)))
print(figBarGraph_poster)
axis.text.x = element_text(angle = 90, hjust = 1)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureRNA.R', echo=TRUE)
heatMapName
cowplot::save_plot(plot = figComb,
filename = paste0(figureName, "_poster") ,
ncol = 1.75,nrow = 3, dpi=600)
paste0(figureName, "_poster")
figureName=paste0("../b_figures/",heatMapName,"_poster.png")
cowplot::save_plot(plot = figComb,
filename = figureName,
ncol = 1.75,nrow = 3, dpi=600)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureRNA_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureRNA_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureRNA_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureRNA_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureRNA_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureProtein_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureProtein_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureProtein_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureRNA_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureRNA_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/heatMapFigureProtein_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
View(kegg_metabolism_summary)
kegg_metabolism_summary$KEGG_Path_short
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
kegg_metabolism_summary$KEGG_Path_short
kegg_metabolism_summary$KEGG_Path_short=="Phenylalanine, tyrosine and tryptophan biosynthesis" <-"a"
kegg_metabolism_summary$KEGG_Path_short=="Phenylalanine, tyrosine and tryptophan biosynthesis"
which(kegg_metabolism_summary$KEGG_Path_short=="Phenylalanine, tyrosine and tryptophan biosynthesis")
temp
which(temp=="Phenylalanine, tyrosine and tryptophan biosynthesis")
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
which(temp=="Phenylalanine, tyrosine and tryptophan biosynthesis")
temp[which(temp=="Phenylalanine, tyrosine and tryptophan biosynthesis")]<-"a"
temp
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
temp
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/d_Mf_Pathway_Analyze/summaryFigures_poster.R', echo=TRUE)
