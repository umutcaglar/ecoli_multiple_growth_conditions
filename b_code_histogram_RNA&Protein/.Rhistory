tidyr::spread(key = colNames,
value = cophenetic_distance)->q2
View(q2)
View(q2)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
tidyr::spread(key = colNames,
value = cophenetic_distance)->q3
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
tidyr::spread(key = colNames,
value = cophenetic_distance)->q3
View(q3)
colnames(q2)
q2%>%
dplyr::select(rownames,colnames,cophenetic_distance)%>%
tidyr::spread(key = colNames,
value = cophenetic_distance)->q3
q2%>%
dplyr::select(rownames,colnames,cophenetic_distance)
colnames(q2)
q2%>%
dplyr::select(rownames)
View(q2)
View(q2)
q2%>%
dplyr::select(rowNames, colNames,cophenetic_distance)%>%
tidyr::spread(key = colNames,
value = cophenetic_distance)->q3
View(q3)
q2%>%
dplyr::select(rowNames, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distance)->q3
q2%>%
dplyr::select(rowNames, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)->q3
View(q3)
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)->q3
View(q3)
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
View(q3)
View(q3)
View(q3)
colnames(q2)
colnames(q3)
q3[[rowNmaes]]
q3[[rowNames]]
q3[["rowNames"]]
as.vector(q3[["rowNames"]])
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
q3 %>%
dplyr::select(c("rowNames","variableR",as.vector(q3[["rowNames"]])))->q3
Q
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
q3 %>%
dplyr::select(c("rowNames","variableR",as.vector(q3[["rowNames"]])))->q3
c("rowNames", "variableR", as.vector(q3[["rowNames"]]))
View(q3)
setdiff(colnames(q3),c("rowNames","variableR",as.vector(q3[["rowNames"]])))
setdiff(c("rowNames","variableR",as.vector(q3[["rowNames"]])),colnames(q3))
setequal(c("rowNames","variableR",as.vector(q3[["rowNames"]])),colnames(q3))
q3 %>%
dplyr::select_(c("rowNames","variableR",as.vector(q3[["rowNames"]])))->q3
View(q3)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
q3 %>%
dplyr::select_("rowNames","variableR",as.vector(q3[["rowNames"]]))->q4
View(q4)
as.vector(q3[["rowNames"]])
m<-c("rowNames","variableR",as.vector(q3[["rowNames"]]))
q3 %>%
dplyr::select_(m)->q4
q3[[m]]->q4
m
q3[[c("rowNames"  "variableR" "MURI_016")]]->q4
q3[[c("rowNames","variableR","MURI_016")]]->q4
q3[["rowNames","variableR","MURI_016"]]->q4
q3[[,c("rowNames","variableR","MURI_016")]]->q4
q3[,c("rowNames","variableR","MURI_016")]->q4
q3[,m]->q4
View(q4)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
m<-c("rowNames","variableR",as.vector(q3[["rowNames"]]))
q3[,m]->q4
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
m<-c("rowNames","variableR",as.vector(q3[["rowNames"]]))
q3[,m]->q4
View(q4)
?flashClust
??flashClust
# Draw heat map by hand for proteins
###*****************************
# INITIAL COMMANDS TO RESET THE SYSTEM
rm(list = ls())
if (is.integer(dev.list())){dev.off()}
cat("\014")
###*****************************
###*****************************
# Set Working Directory
# One needs to arrange the correct pathway if this is not umut's computer ;)
if(as.vector(Sys.info()["effective_user"]=="umut"))
{setwd(paste0("/Users/umut/GitHub/ecoli_multiple_growth_conditions/",
"b_code_histogram_RNA&Protein/"))} # mac computer
###*****************************
###*****************************
# INSTALL LIBRARIES
require("dplyr")
require("tidyr")
require("reshape2")
require("lazyeval")
require("flashClust")
# For Plotting
require("ggplot2")
require("RColorBrewer")
require("grid")
require("gridExtra")
require("cowplot")
require("ggdendro")
require("scales")
require("gtable")
###*****************************
###*****************************
#Load Functions
source("../a_code_dataPreperation_RNA&Protein/data_naming_functions.R")
source("replace_fun.R")
###*****************************
?flushclust
??flushclust
flashClust
?flashClust
?dendro_data
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
distance_df=real_distance_df
distance_df1=real_distance_df
distance_df2=cophenetic_distance_df_real
cor(distance_df1,distance_df2)
cor(as.vector(distance_df1),as.vector(distance_df2))
as.vector(distance_df1)
unlist(distance_df1)
cor(unlist(distance_df1),unlist (distance_df2))
cor(unlist(distance_df1),unlist (distance_df2))
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
real_distance_df=as.data.frame(as.matrix(dist_x))
View(real_distance_df)
###*****************************
# Find the csv files that need to be imported
dataName=name_data(initialValue=c("resDf"), # can be c("genes0.05","genes_P0.05Fold2","resDf")
dataType = "protein", # can be "rna", "mrna", "protein", "protein_wo_NA"
badDataSet = "set00", # can be "set00",set01","set02", "set03"
# referenceParameters can be a vector like
# c("growthPhase", "Mg_mM_Levels", "Na_mM_Levels", "carbonSource", "experiment")
referenceParameters=c("growthPhase",
"Mg_mM_Levels",
"Na_mM_Levels",
"carbonSource",
"experiment"),
# referenceLevels can be a vector like
# c("exponential", "baseMg", "baseNa", "glucose", "glucose_time_course")
referenceLevels=c("exponential",
"baseMg",
"baseNa",
"glucose",
"glucose_time_course"),
experimentVector = c("allEx"), # can be "Stc","Ytc","Nas","Agr","Ngr","Mgl","Mgh" // "allEx"
carbonSourceVector = "SYAN", # can be any sub combination of "SYAN"
MgLevelVector = c("allMg"), # can be "lowMg","baseMg","highMg" // "allMg"
NaLevelVector = c("allNa"), # can be "baseNa","highNa" // "allNa"
growthPhaseVector = c("allPhase"), # can be "exponential","stationary","late_stationary" // "allPhase"
filterGenes = "noFilter", # can be "noFilter", "meanFilter", "maxFilter", "sdFilter"
threshold=NA, # the threshold value for "meanFilter", "maxFilter", "sdFilter"
roundData=TRUE,
sumTechnicalReplicates=TRUE,
deSeqSfChoice="p1Sf", # can be "regSf", "p1Sf", "noSf"
normalizationMethodChoice= "vst", # can be "vst", "rlog", "log10", "noNorm"
test_for = "noTest")  # works only if normalizationMethodChoice == noNorm
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource", "noTest")
dataName=as.data.frame(dataName[1])
metaDataName=dataName
metaDataName$objectName.initial="metaData"
treeDataName=dataName
treeDataName$objectName.initial="treeData"
heatMapName=dataName
heatMapName$objectName.initial="heatMap"
dataName=paste(dataName,collapse = "_")
metaDataName=paste(metaDataName,collapse = "_")
treeDataName=paste(treeDataName,collapse = "_")
heatMapName=paste(heatMapName,collapse = "_")
mainDataFrame=read.csv(file = paste0("../a_results/",dataName,".csv"),header = TRUE,row.names = 1)
condition=read.csv(file = paste0("../a_results/",metaDataName,".csv"),header = TRUE)
###*****************************
View(mainDataFrame)
sqrt(mainDataFrame$MURI_016^2+mainDataFrame$MURI_017^2)
mainDataFrame$MURI_016
mainDataFrame$MURI_016^2
sqrt(sum((mainDataFrame$MURI_016-mainDataFrame$MURI_017)^2))
sqrt(sum((mainDataFrame$MURI_016-mainDataFrame$MURI_018)^2))
sqrt(sum((mainDataFrame$MURI_016-mainDataFrame$MURI_019)^2))
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
###*****************************
# Genrate Distance Matrices
cophenetic_distance_df_real=as.data.frame(as.matrix(cophenetic(METree.reorder_x_d)))
real_distance_df=as.data.frame(as.matrix(dist_x))
if (distanceType=="cophenetic"){distance_df=real_distance_df}
if (distanceType=="euclidean"){distance_df=cophenetic_distance_df_real}
View(distance_df)
# Genrate Distance Matrices
cophenetic_distance_df_real=as.data.frame(as.matrix(cophenetic(METree.reorder_x_d)))
real_distance_df=as.data.frame(as.matrix(dist_x))
if (distanceType=="cophenetic"){distance_df=real_distance_df}
if (distanceType=="euclidean"){distance_df=cophenetic_distance_df_real}
View(distance_df)
distance_df[["MURI_016","MURI_017"]]
distance_df[["MURI_016","MURI_018"]]
distance_df[["MURI_016","MURI_019"]]
distance_df[["MURI_019","MURI_018"]]
?chartr
?char
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
m<-c("rowNames","variableR",as.vector(q3[["rowNames"]]))
q3[,m]->q4
View(q4)
sort(unique(q4))
sort(unique(as.vector(q4)))
sort(unique(unlist(q4)))
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
View(as.matrix(dist_x))
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
m<-c("rowNames","variableR",as.vector(q3[["rowNames"]]))
q3[,m]->q4
distance_df1=real_distance_df
distance_df2=cophenetic_distance_df_real
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
m<-c("rowNames","variableR",as.vector(q3[["rowNames"]]))
q3[,m]->q4
View(q4)
View(q4)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/cophenetic_distance.R', echo=TRUE)
View(z_scores)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
View(z_scores)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
View(z_scores)
View(z_scores)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
View(differentialGeneAnalResults)
View(res_df)
View(res_df)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table_functions.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
Na_real
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
mainDataFrame %>%
dplyr::add_rownames("rowNames")%>%
tidyr::gather(key = colNames,
value = cophenetic_distance,
...=1:ncol(mainDataFrame)+1) ->q1
q1 %>%
mutate(cophenetic_distanceNa=ifelse(colNames==rowNames,NA,cophenetic_distance))%>%
left_join(.,meta_variable, by=c("rowNames"="dataSet"))%>%
dplyr::rename(variableR=variable)%>%
left_join(.,meta_variable, by=c("colNames"="dataSet"))%>%
dplyr::rename(variableC=variable) %>%
dplyr::mutate(cophenetic_distanceNa=ifelse(variableC!=variableR,
NA,cophenetic_distanceNa))->q2
q2%>%
dplyr::select(rowNames, variableR, colNames,cophenetic_distanceNa)%>%
tidyr::spread(key = colNames,
value = cophenetic_distanceNa)%>%
dplyr::arrange(variableR)->q3
m<-c("rowNames","variableR",as.vector(q3[["rowNames"]]))
q3[,m]->q4
View(metaInput)
metaInput %>% dplyr::filter(Na_mM_Levels=="baseNa")%>%.$dataSet
metaInput %>% dplyr::filter(Na_mM_Levels=="baseNa")%>%.$dataSet%>%as.vector(.)
metaInput %>% dplyr::filter(Na_mM_Levels=="baseNa")%>%.$dataSet%>%as.vector(.)->baseNA_dataSet
metaInput %>% dplyr::filter(Na_mM_Levels=="highNa")%>%.$dataSet%>%as.vector(.)->highNA_dataSet
View(q4)
View(q2)
colnames(q2)
??mean
?mean
q2 %>%
dplyr::filter(variableR=="baseNa")%>%
dplyr::filter(variableC=="baseNA")%>%
mean(.$cophenetic_distanceNa,na.rm = TRUE)->meanNa
q2 %>%
dplyr::filter(variableR=="baseNa")%>%
dplyr::filter(variableC=="baseNA")%>%
.$cophenetic_distanceNa
q2 %>%
dplyr::filter(variableR=="baseNa")%>%
dplyr::filter(variableC=="baseNa")%>%
.$cophenetic_distanceNa
q2 %>%
dplyr::filter(variableR=="baseNa")%>%
dplyr::filter(variableC=="baseNa")%>%
.$cophenetic_distanceNa %>%
mean(.)->meanNa
meanNa
q2 %>%
dplyr::filter(variableR=="baseNa")%>%
dplyr::filter(variableC=="baseNa")%>%
.$cophenetic_distanceNa %>%
mean(.,na.rm = TRUE)->meanNa
meanNa
q2 %>%
dplyr::filter(variableR=="baseNa")%>%
dplyr::filter(variableC=="baseNa")%>%
.$cophenetic_distanceNa %>%
mean(.,na.rm = TRUE)->meanBaseNa
q2 %>%
dplyr::filter(variableR=="highNa")%>%
dplyr::filter(variableC=="highNa")%>%
.$cophenetic_distanceNa %>%
mean(.,na.rm = TRUE)->meanHighNa
meanHighNa
meanBaseNa
q2 %>%
.$cophenetic_distanceNa %>%
mean(.,na.rm = TRUE)->meanNa
meanNa
source('~/GitHub/ecoli_multiple_growth_conditions/b_code_histogram_RNA&Protein/distance_table.R', echo=TRUE)
Na_real
Na_real
