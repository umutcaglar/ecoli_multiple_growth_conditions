doescolnamescorrect=("hpi" %in% names(data_next_check) & "GFP" %in% names(data_next_check))
if(doescolnamescorrect){
arecolumnsnumeric=(is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP))
if(arecolumnsnumeric){
print("check done")
return(data)
}
if(!arecolumnsnumeric){
stop("The columns should include numbers")
}
}
if(!doescolnamescorrect){
stop("The colum names should be hpi and GFP")
}
}
if(!num_columns==2){
stop("The data frame should contain 2 columns")
}
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = dataCheck(dataInput)
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
is.list(dataInput)
is.data.frame(dataInput)
list(data=dataInput,b=3)
p<-list(data=dataInput,b=3)
is.list(p)
is.data.frame(p)
dataCheck <-function(data){
isalist=(is.list(data) & !is.data.frame(data))
if(isalist){
doesitcontainTID=("timeIntensityData" %in% names(data))
if(doesitcontainTID){
issection_dataframe=is.data.frame(data$timeIntensityData)
if(issection_dataframe){
data_next_check=data$timeIntensityData
}
if(!issection_dataframe){
stop("the timeIntensityData section should be a data frame")
}
}
if(!doesitcontainTID){
stop("the list should contain timeIntensityData section")
}
}
if(!isalist){
isadataframe=is.data.frame(data)
if(isadataframe){
data_next_check=data
data2=data
data=list(timeIntensityData=data2)
}
if(!isadataframe){
stop("It should either be a list or a data frame")
}
}
num_columns=ncol(data_next_check)
if(num_columns==2){
doescolnamescorrect=("hpi" %in% names(data_next_check) & "GFP" %in% names(data_next_check))
if(doescolnamescorrect){
arecolumnsnumeric=(is.numeric(data_next_check$hpi) & is.numeric(data_next_check$GFP))
if(arecolumnsnumeric){
print("check done")
return(data)
}
if(!arecolumnsnumeric){
stop("The columns should include numbers")
}
}
if(!doescolnamescorrect){
stop("The colum names should be hpi and GFP")
}
}
if(!num_columns==2){
stop("The data frame should contain 2 columns")
}
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = dataCheck(dataInput)
View(data_next_check)
dataOutput
unnormalizeData <-
function(dataInput)
{
hpi=dataOutput$dataScalingParameters$timeMin+
dataOutput$dataScalingParameters$timeRatio*dataOutput$timeIntensityData$hpi
GFP=dataOutput$dataScalingParameters$intensityMin+
dataOutput$dataScalingParameters$intensityRatio*dataOutput$timeIntensityData$GFP
dataOutput = list(timeIntensityData=data.frame(hpi,GFP))
return(dataOutput)
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = normalizeData(dataInput)
dataInput2=dataOutput
dataOutput2 = dataCheck(dataInput2)
dataOutput2
sd(c(3,5))
170*105/151
require("sicegar")
detach(sicegar)
detach("sicegar")
load("~/GitHub/single_cell_virology/processedData/SCV045_filter00_combinedResults.Rda")
View(all_fPc_SCV045_filter00)
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
t(all_fPc_SCV045_filter00[7,])
t(all_fPc_SCV045_filter00[12,])
rep(1:4, 2)
rep("a", 2)
rep(c("a","b"), 2)
rep(c("a","b"), 2,4)
rep(c("a","b"), c(2,4))
rep(c("a","b","c"), c(2,4,6))
FDR?
?
`
""
ELKFWE
QUIR
S
msdnbf
)))
install.packages("ada", "caret", "e1071", "ggplot2", "GGally", "glmnet", "MASS", "randomForest", "reshape2", "sparsediscrim")
install.packages("ada")
install.packages("caret")
install.packages("e1071")
install.packages("ggplot2")
install.packages("GGally")
install.packages("glmnet")
install.packages("MASS")
install.packages("randomForest")
install.packages("reshape2")
install.packages("sparsediscrim")
source("https://bioconductor.org/biocLite.R")
biocLite("genefilter")
??foreach
install.packages("doMC")
install.packages("foreach")
??foreach
require(doMC)
require(foreach)
??foreach
?foreach
source('~/Desktop/statTest.R', echo=TRUE)
mean(trueSet)
mean(wrongSet)
length(trueSet)
length(wrongSet)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_1 <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr"))
mcols(res_1, use.names=TRUE)
res_df_1<-as.data.frame(res_1)
DESeq2::summary.DESeqResults(object = res_1,alpha = 0.05)
###*****************************
res_1
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_1 <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr"))
mcols(res_1, use.names=TRUE)
res_df_1<-as.data.frame(res_1)
DESeq2::summary.DESeqResults(object = res_1,alpha = 0.05)
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_1B <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr"))
mcols(res_1B, use.names=TRUE)
res_df_1B<-as.data.frame(res_1B)
DESeq2::summary.DESeqResults(object = res_1B,alpha = 0.05)
res_1
res_1B
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_Mg <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr"))
mcols(res_Mg, use.names=TRUE)
res_df_Mg<-as.data.frame(res_Mg)
DESeq2::summary.DESeqResults(object = res_Mg,alpha = 0.05)
###*****************************
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_MgB <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr"))
mcols(res_MgB, use.names=TRUE)
res_df_MgB<-as.data.frame(res_MgB)
DESeq2::summary.DESeqResults(object = res_MgB,alpha = 0.05)
###*****************************
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Na_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_Na <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr"))
mcols(res_Na, use.names=TRUE)
res_df_Na<-as.data.frame(res_Na)
DESeq2::summary.DESeqResults(object = res_Na,alpha = 0.05)
###*****************************
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Na_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_NaB <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr"))
mcols(res_NaB, use.names=TRUE)
res_df_NaB<-as.data.frame(res_NaB)
DESeq2::summary.DESeqResults(object = res_NaB,alpha = 0.05)
###*****************************
res_Mg
res_MgB
res_Na
res_NaB
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Na_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_NaCon <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"highNa","baseNa")))
mcols(res_NaCon, use.names=TRUE)
res_df_NaCon<-as.data.frame(res_NaCon)
DESeq2::summary.DESeqResults(object = res_NaCon,alpha = 0.05)
###*****************************
res_NaCon
res_Na
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Na_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_NaBCon <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"highNa","baseNa")))
mcols(res_NaBCon, use.names=TRUE)
res_df_NaBCon<-as.data.frame(res_NaBCon)
DESeq2::summary.DESeqResults(object = res_NaBCon,alpha = 0.05)
###*****************************
res_NaBCon
res_NaB
res_NaBCon
cat("\014")
res_NaBCon
res_NaCon
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Na_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ","batchNumber + ",test_for))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_NaBrevCon <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"highNa","baseNa")))
mcols(res_NaBrevCon, use.names=TRUE)
res_df_NaBrevCon<-as.data.frame(res_NaBrevCon)
DESeq2::summary.DESeqResults(object = res_NaBrevCon,alpha = 0.05)
###*****************************
cat("\014")
res_NaBCon
res_NaBrevCon
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Na_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_NaBConrev <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"baseNa","highNa")))
mcols(res_NaBConrev, use.names=TRUE)
res_df_NaBConrev<-as.data.frame(res_NaBConrev)
DESeq2::summary.DESeqResults(object = res_NaBConrev,alpha = 0.05)
###*****************************
cat("\014")
res_NaBCon
res_NaBConrev
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_MgBconhb <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"highMg","baseMg")))
mcols(res_MgBconhb, use.names=TRUE)
res_df_MgBconhb<-as.data.frame(res_MgBconhb)
DESeq2::summary.DESeqResults(object = res_MgBconhb,alpha = 0.05)
###*****************************
cat("\014")
res_Mg
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_MgBconlb <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"lowMg","baseMg")))
mcols(res_MgBconlb, use.names=TRUE)
res_df_MgBconlb<-as.data.frame(res_MgBconlb)
DESeq2::summary.DESeqResults(object = res_MgBconlb,alpha = 0.05)
###*****************************
cat("\014")
res_Mg
res_Mg
res_MgBconlb
res_MgBconhb
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_MgBconhb <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"highMg","baseMg")))
mcols(res_MgBconhb, use.names=TRUE)
res_df_MgBconhb<-as.data.frame(res_MgBconhb)
DESeq2::summary.DESeqResults(object = res_MgBconhb,alpha = 0.05)
###*****************************
res_df_MgBconhb
res_MgBconhb
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_MgBconhb <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"highMg","baseMg")))
mcols(res_MgBconhb, use.names=TRUE)
res_df_MgBconhb<-as.data.frame(res_MgBconhb)
DESeq2::summary.DESeqResults(object = res_MgBconhb,alpha = 0.05)
res_df_MgBconhb
res_MgBconhb
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="Mg_mM_Levels"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_MgBconhb <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"highMg","baseMg")))
mcols(res_MgBconhb, use.names=TRUE)
res_df_MgBconhb<-as.data.frame(res_MgBconhb)
DESeq2::summary.DESeqResults(object = res_MgBconhb,alpha = 0.05)
###*****************************
res_MgBconhb
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="carbonSource"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_CarbonCon <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"glycerol","glucose")))
mcols(res_CarbonCon, use.names=TRUE)
res_df_CarbonCon<-as.data.frame(res_CarbonCon)
DESeq2::summary.DESeqResults(object = res_CarbonCon,alpha = 0.05)
###*****************************
###*****************************
# Do the DeSeq2 test
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="carbonSource"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_CarbonCon <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"glycerol","glucose")))
mcols(res_CarbonCon, use.names=TRUE)
res_df_CarbonCon<-as.data.frame(res_CarbonCon)
DESeq2::summary.DESeqResults(object = res_CarbonCon,alpha = 0.05)
###*****************************
res_CarbonCon
test_for="carbonSource"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + batchNumber"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_CarbonBCon <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"glycerol","glucose")))
mcols(res_CarbonBCon, use.names=TRUE)
res_df_CarbonBCon<-as.data.frame(res_CarbonBCon)
DESeq2::summary.DESeqResults(object = res_CarbonBCon,alpha = 0.05)
cat("\014")
res_CarbonCon
res_CarbonBCon
DESeq2::summary.DESeqResults(object = res_CarbonCon
)
DESeq2::summary.DESeqResults(object = res_CarbonBCon)
coldata <- colData(deseq_DataObj)
coldata <- as.data.frame(colData(deseq_DataObj))
View(coldata)
coldata <- as.data.frame(colData(deseq_DataObj))
coldata %>%
dplyr::mutate(fake_batch=ifelse(carbonSource=="glucuse",1,NA),
fake_batch=ifelse(carbonSource=="glycerol",2,fake_batch),
fake_batch=ifelse(carbonSource=="gluconate",3,fake_batch),
fake_batch=ifelse(carbonSource=="lactate",4,fake_batch))->coldata
View(coldata)
coldata %>%
dplyr::mutate(fake_batch=ifelse(carbonSource=="glucuse",1,NA))
coldata <- as.data.frame(colData(deseq_DataObj))
coldata %>%
dplyr::mutate(fake_batch=ifelse(carbonSource=="glucuse",1,NA))->q
View(q)
coldata <- as.data.frame(colData(deseq_DataObj))
coldata %>%
dplyr::mutate(fake_batch=ifelse(carbonSource=="glucose",1,NA),
fake_batch=ifelse(carbonSource=="glycerol",2,fake_batch),
fake_batch=ifelse(carbonSource=="gluconate",3,fake_batch),
fake_batch=ifelse(carbonSource=="lactate",4,fake_batch))->coldata
View(q)
View(coldata)
remove(q)
coldata <- as.data.frame(colData(deseq_DataObj))
coldata %>%
dplyr::mutate(fake_batch=ifelse(carbonSource=="glucose",1,NA),
fake_batch=ifelse(carbonSource=="glycerol",2,fake_batch),
fake_batch=ifelse(carbonSource=="gluconate",3,fake_batch),
fake_batch=ifelse(carbonSource=="lactate",4,fake_batch))->coldata
colData(deseq_DataObj)<-coldata
colData(deseq_DataObj)=coldata
colData(deseq_DataObj)
deseq_DataObj$colData
deseq_DataObj$batchEffect
deseq_DataObj$colData
deseq_DataObj$coldata
colData(deseq_DataObj)
names(deseq_DataObj)
names(deseq_DataObj[1])
names(deseq_DataObj[,1])
names(deseq_DataObj[,2])
names(deseq_DataObj[2])
names(deseq_DataObj[[2]])
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/data_normalization_DeSeq2.R', echo=TRUE)
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="carbonSource"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_CarbonCon <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"glycerol","glucose")))
mcols(res_CarbonCon, use.names=TRUE)
res_df_CarbonCon<-as.data.frame(res_CarbonCon)
DESeq2::summary.DESeqResults(object = res_CarbonCon,alpha = 0.05)
res_CarbonCon
# c("Mg_mM_Levels", "Na_mM_Levels", "growthPhase", "carbonSource")
test_for="carbonSource"
DESeq2::design(deseq_DataObj)<- as.formula(paste0("~ ",test_for," + fake_batch"))
differentialGeneAnalResults<-DESeq2::DESeq(deseq_DataObj)
(res_CarbonfBCon <- DESeq2::results(object = differentialGeneAnalResults, pAdjustMethod ="fdr", contrast = c(test_for,"glycerol","glucose")))
mcols(res_CarbonfBCon, use.names=TRUE)
res_df_CarbonfBCon<-as.data.frame(res_CarbonfBCon)
DESeq2::summary.DESeqResults(object = res_CarbonfBCon,alpha = 0.05)
res_CarbonfBCon
cat("\014")
res_CarbonCon
res_CarbonfBCon
