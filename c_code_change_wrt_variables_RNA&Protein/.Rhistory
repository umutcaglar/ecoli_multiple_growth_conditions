hpi=dataOutput$dataScalingParameters$timeMin+
dataOutput$dataScalingParameters$timeRatio*dataOutput$timeIntensityData$hpi
GFP=dataOutput$dataScalingParameters$intensityMin+
dataOutput$dataScalingParameters$intensityRatio*dataOutput$timeIntensityData$GFP
dataOutput = list(timeIntensityData=data.frame(hpi,GFP))
return(dataOutput)
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
normalizeData <-
function(dataInput)
{
timeMin=min(dataInput$hpi)
timeData=dataInput$hpi-timeMin
timeRatio=max(timeData)
timeData=timeData/timeRatio
intensityMin=min(dataInput$GFP)
intensityData=dataInput$GFP-intensityMin
intensityRatio=max(intensityData)
intensityData=intensityData/intensityRatio
dataOutput = data.frame(hpi=timeData,GFP=intensityData)
return(list(timeIntensityData=dataOutput,
dataScalingParameters=c(timeMin=timeMin,
timeRatio=timeRatio,
intensityMin=intensityMin,
intensityRatio=intensityRatio)))
}
hpi = seq(3,48,0.5)
GFP=runif(length(hpi), 3.0, 7.5)
dataInput = data.frame(hpi,GFP)
dataOutput = normalizeData(dataInput)
dataInput2=dataOutput
dataOutput2 = dataCheck(dataInput2)
dataOutput2
sd(c(3,5))
170*105/151
require("sicegar")
detach(sicegar)
detach("sicegar")
load("~/GitHub/single_cell_virology/processedData/SCV045_filter00_combinedResults.Rda")
View(all_fPc_SCV045_filter00)
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
all_fPc_SCV045_filter00[7,]
t(all_fPc_SCV045_filter00[7,])
t(all_fPc_SCV045_filter00[12,])
rep(1:4, 2)
rep("a", 2)
rep(c("a","b"), 2)
rep(c("a","b"), 2,4)
rep(c("a","b"), c(2,4))
rep(c("a","b","c"), c(2,4,6))
FDR?
?
`
""
ELKFWE
QUIR
S
msdnbf
)))
install.packages("ada", "caret", "e1071", "ggplot2", "GGally", "glmnet", "MASS", "randomForest", "reshape2", "sparsediscrim")
install.packages("ada")
install.packages("caret")
install.packages("e1071")
install.packages("ggplot2")
install.packages("GGally")
install.packages("glmnet")
install.packages("MASS")
install.packages("randomForest")
install.packages("reshape2")
install.packages("sparsediscrim")
source("https://bioconductor.org/biocLite.R")
biocLite("genefilter")
??foreach
install.packages("doMC")
install.packages("foreach")
??foreach
require(doMC)
require(foreach)
??foreach
?foreach
source('~/Desktop/statTest.R', echo=TRUE)
mean(trueSet)
mean(wrongSet)
length(trueSet)
length(wrongSet)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
source('~/Desktop/statTest.R', echo=TRUE)
sprintf("%E", pi)
sprintf("%3E", pi)
sprintf("%.3E", pi)
sprintf("%.3E", 9837649872345095486)
sprintf("%.3e", 9837649872345095486)
sprintf("%.3e", .000000009837649872345095486)
sprintf("%.3E", .000000009837649872345095486)
# Initial Command to Reset the System
rm(list = ls())
if (is.integer(dev.list())){dev.off()}
cat("\014")
load("/Users/umut/GitHub/single_cell_virology/processedData/SCV047_mod05filter00_Max1000Min40.Rda")
View(fP_SCV047_mod05filter00_Max1000Min40)
require("RDAVIDWebService")
install.packages("rJava")
require("RDAVIDWebService")
require("rJava")
require("RDAVIDWebService")
require("RDAVIDWebService")
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
6000/10*11
c(5,5,1)/11
jpeg(filename = '../c_figures/venn_V2.jpeg',width = 6600, height = 6600, units="px", res =500)
pushViewport(viewport(layout=grid.layout(ncol=3,nrow = 3,
widths = unit(c(5,5,1)/11, "npc"),
heights = unit(c(1,5,5)/11, "npc")
)))
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=1))
grid.draw(exp_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=2))
grid.draw(exp_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=1))
grid.draw(sta_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=2))
grid.draw(sta_protein_fig)
popViewport(0)
dev.off()
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "",
main = "2 x 11 rectangles; 'rect(100+i,300+i,  150+i,380+i)'")
op <- par(bg = "thistle")
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "",
main = "2 x 11 rectangles; 'rect(100+i,300+i,  150+i,380+i)'")
op <- par(bg = "thistle")
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "",
main = "2 x 11 rectangles; 'rect(100+i,300+i,  150+i,380+i)'")
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="")
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="",  xaxt='n', ann=FALSE)
plot(c(100, 200), c(300, 450), xlab="", ylab="",  xaxt='n', ann=FALSE)
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="",  xaxt='n', ann=FALSE, yaxt='n')
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="",  xaxt='n', ann=FALSE, yaxt='n', bty='l')
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="",  xaxt='n', ann=FALSE, yaxt='n', bty='0')
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="",  xaxt='n', ann=FALSE, yaxt='n', bty='0')
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="",  xaxt='n', ann=FALSE, yaxt='n', bty='1')
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="", ann=FALSE, bty='1')
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
, ann=FALSE
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="", bty='1')
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="")
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="",byt=1)
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(c(100, 200), c(300, 450), type= "n", xlab="", ylab="",byt="1")
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(1, type="n", xlab="", ylab="", xlim=c(0, 10), ylim=c(0, 10))
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(1, type="n", xlab="", ylab="", xlim=c(0, 10), ylim=c(0, 10))
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='')
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 500), ylim=c(0, 500))
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col="green", border="blue") # coloured
rect(115, 375, 150, 425, col=par("bg"), border="transparent")
rect(150, 300, 175, 350, density=10, border="red")
rect(150, 400, 175, 450, density=30, col="blue",
angle=-30, border="transparent")
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10))
rect(0, 10, 0, 10, col="grey", border="grey") # coloured
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10))
rect(0, 10, 0, 10, col="grey", border="grey") # coloured
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10))
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
plot(-1:1, -1:1, type = "n", xlab = "Re", ylab = "Im")
K <- 16; text(exp(1i * 2 * pi * (1:K) / K), col = 2)
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),)
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
text(x=c(0,0),""hi)
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),)
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
text(x=c(0,0),"hi")
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),)
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
text(x=0, y=0,"hi")
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),)
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
text(x=0, y=0,labels = "hi",cex = 2)
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),)
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
text(x=0, y=5,labels = "hi",cex = 2)
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),)
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
text(x=2, y=5,labels = "hi",cex = 2)
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),col="grey")
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
text(x=2, y=5,labels = "Protein",cex = 2,)
op <- par(bg = "grey")
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),col="grey")
rect(0, 0, 10, 10, col="grey", border="grey") # coloured
text(x=2, y=5,labels = "Protein",cex = 2,)
op <- par(bg = "grey")
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),col="grey")
text(x=2, y=5,labels = "Protein",cex = 2,)
op <- par(bg = "grey10")
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),col="grey")
text(x=2, y=5,labels = "Protein",cex = 2,)
op <- par(bg = "grey90")
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),col="grey")
text(x=2, y=5,labels = "Protein",cex = 2,)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
op <- par(bg = "grey90")
q1<-plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='' ,xlim=c(0, 10), ylim=c(0, 10),col="grey")+
text(x=2, y=5,labels = "Protein",cex = 2)
jpeg(filename = '../c_figures/venn_V2.jpeg',width = 6600, height = 6600, units="px", res =500)
pushViewport(viewport(layout=grid.layout(ncol=3,nrow = 3,
widths = unit(c(5,5,1)/11, "npc"),
heights = unit(c(1,5,5)/11, "npc")
)))
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=1))
grid.draw(exp_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=2))
grid.draw(exp_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=1))
grid.draw(sta_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=2))
grid.draw(sta_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=1))
grid.draw(q1)
popViewport(0)
dev.off()
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
jpeg(filename = '../c_figures/venn_V2.jpeg',width = 6600, height = 6600, units="px", res =500)
pushViewport(viewport(layout=grid.layout(ncol=3,nrow = 3,
widths = unit(c(5,5,1)/11, "npc"),
heights = unit(c(1,5,5)/11, "npc")
)))
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=1))
grid.draw(exp_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=2))
grid.draw(exp_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=1))
grid.draw(sta_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=2))
grid.draw(sta_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=1))
grid.draw(textGrob(label = "mRNA",gp=gpar(fontsize=35)))
popViewport(0)
dev.off()
jpeg(filename = '../c_figures/venn_V2.jpeg',width = 6600, height = 6600, units="px", res =500)
pushViewport(viewport(layout=grid.layout(ncol=3,nrow = 3,
widths = unit(c(5,5,1)/11, "npc"),
heights = unit(c(1,5,5)/11, "npc")
)))
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=1))
grid.draw(exp_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=2))
grid.draw(exp_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=1))
grid.draw(sta_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=2))
grid.draw(sta_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=1))
grid.draw(textGrob(label = "mRNA",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=2))
grid.draw(textGrob(label = "Protein",gp=gpar(fontsize=35)))
popViewport()
popViewport(0)
dev.off()
jpeg(filename = '../c_figures/venn_V2.jpeg',width = 6600, height = 6600, units="px", res =500)
pushViewport(viewport(layout=grid.layout(ncol=3,nrow = 3,
widths = unit(c(5,5,1)/11, "npc"),
heights = unit(c(1,5,5)/11, "npc")
)))
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=1))
grid.draw(exp_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=2))
grid.draw(exp_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=1))
grid.draw(sta_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=2))
grid.draw(sta_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=1))
grid.draw(textGrob(label = "mRNA",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=2))
grid.draw(textGrob(label = "Protein",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=3))
grid.draw(textGrob(label = "Exponential",gp=gpar(fontsize=35,angle=90)))
popViewport()
popViewport(0)
dev.off()
jpeg(filename = '../c_figures/venn_V2.jpeg',width = 6600, height = 6600, units="px", res =500)
pushViewport(viewport(layout=grid.layout(ncol=3,nrow = 3,
widths = unit(c(5,5,1)/11, "npc"),
heights = unit(c(1,5,5)/11, "npc")
)))
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=1))
grid.draw(exp_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=2))
grid.draw(exp_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=1))
grid.draw(sta_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=2))
grid.draw(sta_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=1))
grid.draw(textGrob(label = "mRNA",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=2))
grid.draw(textGrob(label = "Protein",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=3))
grid.draw(textGrob(label = "Exponential",gp=gpar(fontsize=35),rot = 90))
popViewport()
popViewport(0)
dev.off()
jpeg(filename = '../c_figures/venn_V2.jpeg',width = 6600, height = 6600, units="px", res =500)
pushViewport(viewport(layout=grid.layout(ncol=3,nrow = 3,
widths = unit(c(5,5,1)/11, "npc"),
heights = unit(c(1,5,5)/11, "npc")
)))
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=1))
grid.draw(exp_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=2))
grid.draw(exp_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=1))
grid.draw(sta_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=2))
grid.draw(sta_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=1))
grid.draw(textGrob(label = "mRNA",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=2))
grid.draw(textGrob(label = "Protein",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=3))
grid.draw(textGrob(label = "Exponential",gp=gpar(fontsize=35),rot = -90))
popViewport()
popViewport(0)
dev.off()
6000*12/10
jpeg(filename = '../c_figures/venn_V2.jpeg',width = 7200, height = 6600, units="px", res =500)
pushViewport(viewport(layout=grid.layout(ncol=3,nrow = 3,
widths = unit(c(5,5,2)/11, "npc"),
heights = unit(c(1,5,5)/11, "npc")
)))
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=1))
grid.draw(exp_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=2))
grid.draw(exp_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=1))
grid.draw(sta_mrna_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 3, layout.pos.col=2))
grid.draw(sta_protein_fig)
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=1))
grid.draw(textGrob(label = "mRNA",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 1, layout.pos.col=2))
grid.draw(textGrob(label = "Protein",gp=gpar(fontsize=35)))
popViewport()
pushViewport(viewport(layout.pos.row = 2, layout.pos.col=3))
grid.draw(textGrob(label = "Exponential",gp=gpar(fontsize=35),rot = -90))
popViewport()
popViewport(0)
dev.off()
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/difExpGene_Figures.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/DAVIDWebInterface_multiple.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/DAVIDWebInterface_multiple.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/DAVIDWebInterface_multiple.R', echo=TRUE)
source("../a_code_dataPreperation_RNA&Protein/data_naming_functions.R")
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/DAVIDWebInterface_multiple.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/DAVIDWebInterface_multiple.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/DAVIDWebInterface_multiple.R', echo=TRUE)
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/DAVIDWebInterface_multiple.R', echo=TRUE)
objectName
fileName
davidInputData
source('~/GitHub/ecoli_multiple_growth_conditions/c_code_change_wrt_variables_RNA&Protein/DAVIDWebInterface_multiple.R', echo=TRUE)
#Update objectName
test_base="glucose"
test_contrast="glycerol"
test_for=objectName$test_for
objectName$test_for=paste0("_batchNumberPLUS",gsub("_","",test_for))
objectName$contrast=paste0("_",test_contrast,"VS",test_base)
###*****************************
###****************************
# Generate Object name
fileName=paste(objectName,collapse = "_")
###*****************************
###*****************************
# Load data
davidInputData=read.csv(file = paste0("../c_results/" ,fileName,".csv"),header = TRUE)
davidInputData=as.vector(davidInputData[[1]])
davidInputData
counter01
print(objectName)
