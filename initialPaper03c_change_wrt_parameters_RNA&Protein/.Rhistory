install.packages(kernlab)
install.packages("kernlab")
debugSource('~/GitHub/AG3C_Analyze/Code/sizeFactorCalculationSteability.R', echo=TRUE)
debugSource('~/GitHub/AG3C_Analyze/Code/sizeFactorCalculationSteability.R', echo=TRUE)
97:105
97:105,16:24
c(97:105,16:24)
c(97:105,16:24,25:33)
sprintf("filter%03d", c(97:105,16:24,25:33))
sprintf("MURI_%03d", c(97:105,16:24,25:33))
meta_rna=read.csv(paste0("../Processed_RNA/","metaRNA.csv"))
tempRowNames<-colnames(unnormalized_rna_data)
meta_rna=read.csv(paste0("../Processed_RNA/","metaRNA.csv"))
updateR()
# installing/loading the latest installr package:
install.packages("installr"); library(installr) #load / install+load installr
updateR() # updating R.
install.packages("installr");
install.package("installr");
install.packages("installr");
install.packages("installr");
install.packages('installr')
if (!require('devtools')) install.packages('devtools'); require('devtools')
# make sure you have Rtools installed first! if not, then run:
#install.packages('installr')
#install_Rtools()
devtools::install_github('talgalili/installr')
require(installr)
updateR()
R.home()
updateR(T, T, T, T, T, T, T)
source('~/Desktop/testPCA.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(Y)
source('~/.active-rstudio-document', echo=TRUE)
View(Y)
source('~/.active-rstudio-document', echo=TRUE)
View(Y)
source('~/.active-rstudio-document', echo=TRUE)
View(Y)
source('~/.active-rstudio-document', echo=TRUE)
View(Y)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rowMeans(Y[, -ncol(Y)])
source('~/.active-rstudio-document', echo=TRUE)
View(PC_reg)
View(PC_transform)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
SVD_result$v
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(svd_pca)
View(PC_transform)
source('~/.active-rstudio-document', echo=TRUE)
View(svd_pca)
SVD_result$d
source('~/.active-rstudio-document', echo=TRUE)
SVD_result$d
as.data.frame(SVD_result$d)
source('~/.active-rstudio-document', echo=TRUE)
View(svd_pca)
View(PC_transform)
View(PC_transform)
View(svd_pca)
View(PC_reg)
source('~/.active-rstudio-document', echo=TRUE)
View(Y_reproduced)
View(Y)
View(Y_reproduced)
View(Y)
View(Y_reproduced)
View(PC_reg)
source('~/.active-rstudio-document', echo=TRUE)
names(pca1)
pca1$rotation
source('~/.active-rstudio-document', echo=TRUE)
View(PC_regular_rot)
source('~/.active-rstudio-document', echo=TRUE)
View(svd_PCA)
View(PC_regular_rot)
View(PC_regular)
View(svd_PCA)
View(PC_regular)
View(PC_transform)
install.packages(GGally)
install.packages("GGally")
install.packages("carret")
install.packages("caret")
install.packages("glmnet")
install.packages("MASS")
install.packages("e1071")
install.packages("ada")
install.packages("randomForest")
install.packages("sparsediscrim")
install.packages("PerfMeas")
install.packages("caTools")
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
source("http://bioconductor.org/biocLite.R")
biocLite("genefilter")
traits
debugSource('~/GitHub/single_cell_virology/code/Analysis_of_Virus_Data_Mod00_filter.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/Code_RNA_MLrn/D01_PCA&PCoA_FL.R', echo=TRUE)
rm(list = ls())
if (is.integer(dev.list())){dev.off()}
cat("\014")
load("~/GitHub/AG3C_Analyze/Processed_RNA/normalized_vst_p1_mean_mrna_stationary_highMg_allNa_SY_set00.RData")
library("Biobase")
library("DESeq2")
library("dplyr")
library("tidyr")
library("lazyeval")
# For Plotting
library("ggplot2")
library("RColorBrewer")
library("gridExtra")
library("cowplot")
library("VennDiagram")
VennDiagram::draw.quad.venn(area1 = 20,area2 = 50,area3 = 39,area4 = 45)
VennDiagram::draw.quad.venn(area1 = 20,area2 = 50,area3 = 39,area4 = 45,n12 = 1,n13 = 1,n14 = 1,n23 = 1,n24 = 1,n34 = 1,n123 = 1,n124 = 1,n134 = 1,n234 = 1,n1234 = 1
)
VennDiagram::draw.quad.venn(n12 = 1,n13 = 1,n14 = 1,n23 = 1,n24 = 1,n34 = 1,n123 = 1,n124 = 1,n134 = 1,n234 = 1,n1234 = 1)
debugSource('~/GitHub/AG3C_Analyze/Code/cophenetic_distance_main.R', echo=TRUE)
sprintf("%.5f",0.1)
sprintf("%.5f",0.01)
sprintf("%.5f",0.001)
sprintf("%.5f",0.0001)
sprintf("%.5f",0.00001)
sprintf("%.5f",0.000005)
sprintf("%.5f",0.0000049)
sprintf("%.5f",0.000004999999)
sprintf("%.5f",0.000005)
install.packages(deseq2)
install.packages("deseq2")
source('~/GitHub/AG3C_Analyze/initialPaper01c_dataPreperation_RNA&Protein/GB00_DeSeq2_Data_MainModularNormalization.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper01c_dataPreperation_RNA&Protein/GB00_DeSeq2_Data_MainModularNormalization.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper01c_dataPreperation_RNA&Protein/GB00_DeSeq2_Data_MainModularNormalization.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper01c_dataPreperation_RNA&Protein/GB00_DeSeq2_Data_MainModularNormalization.R', echo=TRUE)
View(mu)
source('~/GitHub/AG3C_Analyze/initialPaper01c_dataPreperation_RNA&Protein/GB00_DeSeq2_Data_MainModularNormalization.R', echo=TRUE)
(unnormalized_protein_data_wo_NAx1-unnormalized_protein_data_wo_NA)
as.vector((unnormalized_protein_data_wo_NAx1-unnormalized_protein_data_wo_NA))
as.vector((unnormalized_protein_data_wo_NAx1-unnormalized_protein_data_wo_NA))->p
View(p)
View(unnormalized_protein_data_wo_NA)
View(p)
as.vector((unnormalized_protein_data_wo_NAx1-unnormalized_protein_data_wo_NA))/as.vector(unnormalized_protein_data_wo_NA)->p
View(p)
View(unnormalized_protein_data_wo_NA)
View(p)
hist(p)
hist(as.vector(p))
as.vector(p)
as.matrix(p)
as.vector(as.matrix(p))
hist(as.vector(as.matrix(p)))
hist(as.vector(as.matrix(p)),1000)
source('~/GitHub/AG3C_Analyze/initialPaper01c_dataPreperation_RNA&Protein/GB00_DeSeq2_Data_MainModularNormalization.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper01c_dataPreperation_RNA&Protein/GB00_DeSeq2_Data_MainModularNormalization.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper01c_dataPreperation_RNA&Protein/GB00_DeSeq2_Data_MainModularNormalization.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureRNA.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureRNA.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureRNA.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/cophenetic_distance_RNA_main.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/cophenetic_distance_RNA_main.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/cophenetic_distance_RNA_main.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureRNA.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
dir
dir()
ls
ls()
condition_vst_p1_noFilter_protein_wo_NA_wholeSet_allMg_allNa_SYAN_set02_allEx %>%
dplyr::mutate(dataSet2d=ifelse(carbonSource=="glucose","S",NA)) %>%
dplyr::mutate(dataSet2d=ifelse(carbonSource=="glycerol","Y",dataSet2d)) %>%
dplyr::mutate(dataSet2d=ifelse(carbonSource=="lactate","A",dataSet2d)) %>%
dplyr::mutate(dataSet2d=ifelse(carbonSource=="gluconate","N",dataSet2d))->condition
condition_vst_p1_noFilter_protein_wo_NA_wholeSet_allMg_allNa_SYAN_set00_allEx %>%
dplyr::mutate(dataSet2d=ifelse(carbonSource=="glucose","S",NA)) %>%
dplyr::mutate(dataSet2d=ifelse(carbonSource=="glycerol","Y",dataSet2d)) %>%
dplyr::mutate(dataSet2d=ifelse(carbonSource=="lactate","A",dataSet2d)) %>%
dplyr::mutate(dataSet2d=ifelse(carbonSource=="gluconate","N",dataSet2d))->condition
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
rm(list = ls())
if (is.integer(dev.list())){dev.off()}
cat("\014")
load("/Users/umut/GitHub/single_cell_virology/processedData/tidySCV040.RDA")
View(SCV040TidyGrouped)
View(SCV040TidyGrouped)
source('~/GitHub/AG3C_Analyze/initialPaper02c_histogram_RNA&Protein/heatMapFigureProtein.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
fig04b<-ggplot(segment(ddata),aes(x = y, y = x, xend = yend, yend = xend)) +
geom_segment() +
theme_classic() +
scale_x_reverse(expand = c(0,0))+
scale_y_discrete(expand = c(0,0))+
coord_cartesian(xlim = c(5, 50))+  #Changed from 25 (like in the mRNA) to 15, indicates that the proteins are better clustered
ylab("")+
xlab("")+
ggtitle("Clustering of Proteins")+
theme( axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
axis.line.y=element_blank(),
axis.ticks.y=element_blank())
print
print(fig04b)
fig04b<-ggplot(segment(ddata),aes(x = y, y = x, xend = yend, yend = xend)) +
geom_segment() +
theme_classic() +
scale_x_reverse(expand = c(0,0))+
scale_y_discrete(expand = c(0,0))+
coord_cartesian(xlim = c(1, 50))+  #Changed from 25 (like in the mRNA) to 15, indicates that the proteins are better clustered
ylab("")+
xlab("")+
ggtitle("Clustering of Proteins")+
theme( axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
axis.line.y=element_blank(),
axis.ticks.y=element_blank())
print(fig04b)
fig04b<-ggplot(segment(ddata),aes(x = y, y = x, xend = yend, yend = xend)) +
geom_segment() +
theme_classic() +
scale_x_reverse(expand = c(0,0))+
scale_y_discrete(expand = c(0,0))+
coord_cartesian(xlim = c(1, 40))+  #Changed from 25 (like in the mRNA) to 15, indicates that the proteins are better clustered
ylab("")+
xlab("")+
ggtitle("Clustering of Proteins")+
theme( axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
axis.line.y=element_blank(),
axis.ticks.y=element_blank())
print(fig04b)
figComb=fig04c
dendogram.x <- gtable_filter(ggplotGrob(fig04a), "panel")
dendogram.y <- gtable_filter(ggplotGrob(fig04b), "panel")
g.main <- ggplotGrob(figComb) # convert the main plot into gtable
# add dendogram.x
index <- subset(g.main$layout, name == "panel") # locate where we want to insert the images
# add a row, one as spacer and one to take the images
g.main <- gtable_add_rows(g.main, unit.c(unit(0.35, "null")), index$b-1)
# add the grob that holds the images
g.main <- gtable_add_grob(g.main, dendogram.x, t = index$b, l = index$l,
b = index$b, r = index$r, name="dendogram-x")
# add dendogram.y
# add a row, one as spacer and one to take the images
g.main <- gtable_add_cols(g.main, unit.c(unit(0.1, "null")), index$l-1)
index <- subset(g.main$layout, name == "panel")
# add the grob that holds the images
g.main <- gtable_add_grob(g.main, dendogram.y,
t = index$b,
l = index$l-1,
b = index$b,
r = index$r-1,
name="dendogram-y")
figComb04=ggdraw(g.main)
print(figComb04)
# Combine figure4
figComb=fig04c
dendogram.x <- gtable_filter(ggplotGrob(fig04a), "panel")
dendogram.y <- gtable_filter(ggplotGrob(fig04b), "panel")
g.main <- ggplotGrob(figComb) # convert the main plot into gtable
# add dendogram.x
index <- subset(g.main$layout, name == "panel") # locate where we want to insert the images
# add a row, one as spacer and one to take the images
g.main <- gtable_add_rows(g.main, unit.c(unit(0.35, "null")), index$b-1)
# add the grob that holds the images
g.main <- gtable_add_grob(g.main, dendogram.x, t = index$b, l = index$l,
b = index$b, r = index$r, name="dendogram-x")
# add dendogram.y
# add a row, one as spacer and one to take the images
g.main <- gtable_add_cols(g.main, unit.c(unit(0.2, "null")), index$l-1)
index <- subset(g.main$layout, name == "panel")
# add the grob that holds the images
g.main <- gtable_add_grob(g.main, dendogram.y,
t = index$b,
l = index$l-1,
b = index$b,
r = index$r-1,
name="dendogram-y")
figComb04=ggdraw(g.main)
print(figComb04)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
fig04b<-ggplot(segment(ddata),aes(x = y, y = x, xend = yend, yend = xend)) +
geom_segment() +
theme_classic() +
scale_x_reverse(expand = c(0,0))+
scale_y_discrete(expand = c(0,0))+
coord_cartesian(xlim = c(5, 60))+  #Changed from 25 (like in the mRNA) to 15, indicates that the proteins are better clustered
ylab("")+
xlab("")+
ggtitle("Clustering of Proteins")+
theme( axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
axis.line.y=element_blank(),
axis.ticks.y=element_blank())
print(fig04b)
###*****************************
###*****************************
# Reordering Genes
temp=rownames(combinedHeatMap)
combinedHeatMap=combinedHeatMap[,realOrderText.x]
combinedHeatMap %>%
dplyr::mutate(gene_names=temp)->combinedHeatMap
combinedHeatMap<-orderFunction(combinedHeatMap,
column="gene_names",
target=realOrderText.y)
combinedHeatMap %>%
dplyr::mutate(order_y=seq(1,nrow(combinedHeatMap))) %>%
tidyr::gather_("test_condition", "p_related", realOrderText.x)%>%
dplyr::mutate(p_rescale=sign(p_related)*log10(abs(p_related)))->combinedHeatMapTidy
combinedHeatMapTidy$test_condition=factor(combinedHeatMapTidy$test_condition, levels = realOrderText.x)
###*****************************
###*****************************
fig04c=ggplot(combinedHeatMapTidy, aes( y=order_y,x=test_condition )) +
geom_tile(aes(fill=p_related))+
scale_fill_gradientn(colours=rev(c("#a50026",
"#d73027",
"#f46d43",
"#fdae61",
"#fee090",
"#e0f3f8",
"#abd9e9",
"#74add1",
"#4575b4",
"#313695")),
values=rescale(c(-20,-5,-3,-1,-.1,.1,1,3,5,20)),
limits=c(-35,35),
guide = guide_colorbar(title = "Gene Score"))+
scale_y_discrete(expand = c(0,0))+
scale_x_discrete(expand = c(0,0),
labels = c("glucose" = "glucose",
"glycerol" = "glycerol",
"lactate" = "lactate",
"gluconate" = "gluconate",
"Na_mM" = "Na",
"Mg_mM"="Mg",
"growthTime_hr"="growth time"))+
ylab("Genes")+
xlab("Test Condition")+
#ggtitle("Clustering between conditions")+
theme_classic()+
theme( axis.text.x=element_text(size=16,angle = 90, hjust = 1),
axis.text.y=element_blank(),legend.title=element_text(size=18),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
legend.text=element_text(size=16),
axis.line.x=element_blank(),
axis.line.y=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
plot.title = element_text(size =18, face = "bold"))
print(fig04c)
# Combine figure4
figComb=fig04c
dendogram.x <- gtable_filter(ggplotGrob(fig04a), "panel")
dendogram.y <- gtable_filter(ggplotGrob(fig04b), "panel")
g.main <- ggplotGrob(figComb) # convert the main plot into gtable
# add dendogram.x
index <- subset(g.main$layout, name == "panel") # locate where we want to insert the images
# add a row, one as spacer and one to take the images
g.main <- gtable_add_rows(g.main, unit.c(unit(0.35, "null")), index$b-1)
# add the grob that holds the images
g.main <- gtable_add_grob(g.main, dendogram.x, t = index$b, l = index$l,
b = index$b, r = index$r, name="dendogram-x")
# add dendogram.y
# add a row, one as spacer and one to take the images
g.main <- gtable_add_cols(g.main, unit.c(unit(0.1, "null")), index$l-1)
index <- subset(g.main$layout, name == "panel")
# add the grob that holds the images
g.main <- gtable_add_grob(g.main, dendogram.y,
t = index$b,
l = index$l-1,
b = index$b,
r = index$r-1,
name="dendogram-y")
figComb04=ggdraw(g.main)
print(figComb04)
g.main$layout
###****************************
###****************************
# Draw bar graphs
test_combined_result %>%
dplyr::filter(test_condition %in% c("glucose","gluconate","lactate","glycerol",
"growthTime_hr","Na_mM","Mg_mM")) %>%
dplyr::filter(p.adj < 0.05) -> test_combined_result_filtered
test_combined_result_filtered%>%
dplyr::group_by(test_condition)%>%
dplyr::summarize(data_length=length(test_condition))%>%
dplyr::filter(data_length<=2)->temp01
test_combined_result_filtered%>%
dplyr::group_by(test_condition, p_related_sign)%>%
dplyr::summarize(data_length=length(test_condition))
test_combined_result_filtered%>%
filter(test_condition!=as.vector(temp01$test_condition))->test_combined_result_filtered
fig05 <- ggplot(test_combined_result_filtered,
aes(x = test_condition,
fill = as.factor(p_related_sign) )) +
geom_bar( position = position_dodge()) +
xlab("Test Condition") + ylab("Gene Count") +
scale_x_discrete(labels = c("glucose" = "Glucose",
"glycerol" = "Glycerol",
"lactate" = "Lactate",
"gluconate" = "Gluconate",
"Na_mM" = "Na",
"Mg_mM"="Mg",
"growthTime_hr"="Growth Time"))+
annotation_logticks(sides = "l",long = unit(0.2, "cm")) +
scale_y_log10(expand = c(0, 0),limits= c(1,5000))+
#ggtitle("Number of significantly changed genes") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.grid.minor.x = element_blank())+
theme_bw()+
scale_fill_manual(values = c("blue","red"),
name="Gene Regulation",
breaks=c("-1", "1"),
labels=c("Down Regulated", "Up Regulated"))
fig05
###****************************
# Combine plots
figComb<-plot_grid(fig05, figComb04)
###****************************
###****************************
save_plot(paste0("../initialPaper03f/violin_",generalFigureName,".png")
,fig01b, ncol = 1, nrow=3)
save_plot(paste0("../initialPaper03f/barGraph_",generalFigureName,".png")
,fig05, ncol = 1.2)
save_plot(paste0("../initialPaper03f/histogram_",generalFigureName,".png")
,figComb04, ncol = 1.3,nrow=1.5)
###****************************
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
head(combinedHeatMap)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
head(combinedHeatMap)
listOfRowsWithNA=which(rowSums(is.na(combinedHeatMap)) > 0,)
NumRowsWithNa=length(listOfRowsWithNA)
combinedHeatMap<-combinedHeatMap[-as.vector(listOfRowsWithNA), ]
combinedHeatMap
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
listOfRowsWithNA=which(rowSums(is.na(combinedHeatMap)) > 0,)
listOfRowsWithNA
NumRowsWithNa=length(listOfRowsWithNA)
NumRowsWithNa
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
head(test_combined_result_filtered)
temp01$test_condition
temp01
test_combined_result_filtered%>%
dplyr::group_by(test_condition)%>%
dplyr::summarize(data_length=length(test_condition))
test_combined_result_filtered%>%
dplyr::group_by(test_condition)%>%
dplyr::summarize(data_length=length(test_condition))%>%
dplyr::filter(data_length<=2)->temp01
temp01
test_combined_result_filtered%>%
dplyr::group_by(test_condition)%>%
dplyr::summarize(data_length=length(test_condition))
as.vector(temp01$test_condition)
nrow(temp01$test_condition)
temp01
nrow(temp01)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsRNATrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
source('~/GitHub/AG3C_Analyze/initialPaper03c_change_wrt_parameters_RNA&Protein/GE03_GO_Figures_AllConditionsProteinTrends.R', echo=TRUE)
